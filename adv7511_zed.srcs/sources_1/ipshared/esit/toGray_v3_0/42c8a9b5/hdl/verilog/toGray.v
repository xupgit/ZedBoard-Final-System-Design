// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="toGray,hls_ip_2014_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.705500,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=3,HLS_SYN_DSP=7,HLS_SYN_FF=2852,HLS_SYN_LUT=5285}" *)

module toGray (
        IN_STREAM_TDATA,
        IN_STREAM_TKEEP,
        IN_STREAM_TSTRB,
        IN_STREAM_TUSER,
        IN_STREAM_TLAST,
        IN_STREAM_TID,
        IN_STREAM_TDEST,
        OUT_STREAM_TDATA,
        OUT_STREAM_TKEEP,
        OUT_STREAM_TSTRB,
        OUT_STREAM_TUSER,
        OUT_STREAM_TLAST,
        OUT_STREAM_TID,
        OUT_STREAM_TDEST,
        cols,
        rows,
        ap_clk,
        ap_rst_n,
        ap_start,
        IN_STREAM_TVALID,
        IN_STREAM_TREADY,
        OUT_STREAM_TVALID,
        OUT_STREAM_TREADY,
        ap_done,
        ap_idle,
        ap_ready
);

parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_true = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_const_logic_1 = 1'b1;

input  [23:0] IN_STREAM_TDATA;
input  [2:0] IN_STREAM_TKEEP;
input  [2:0] IN_STREAM_TSTRB;
input  [0:0] IN_STREAM_TUSER;
input  [0:0] IN_STREAM_TLAST;
input  [0:0] IN_STREAM_TID;
input  [0:0] IN_STREAM_TDEST;
output  [7:0] OUT_STREAM_TDATA;
output  [0:0] OUT_STREAM_TKEEP;
output  [0:0] OUT_STREAM_TSTRB;
output  [0:0] OUT_STREAM_TUSER;
output  [0:0] OUT_STREAM_TLAST;
output  [0:0] OUT_STREAM_TID;
output  [0:0] OUT_STREAM_TDEST;
input  [31:0] cols;
input  [31:0] rows;
input   ap_clk;
input   ap_rst_n;
input   ap_start;
input   IN_STREAM_TVALID;
output   IN_STREAM_TREADY;
output   OUT_STREAM_TVALID;
input   OUT_STREAM_TREADY;
output   ap_done;
output   ap_idle;
output   ap_ready;

reg ap_idle;
reg    ap_rst_n_inv;
wire    toGray_Block_proc_U0_ap_start;
wire    toGray_Block_proc_U0_ap_done;
reg    toGray_Block_proc_U0_ap_continue;
wire    toGray_Block_proc_U0_ap_idle;
wire    toGray_Block_proc_U0_ap_ready;
wire   [31:0] toGray_Block_proc_U0_rows;
wire   [31:0] toGray_Block_proc_U0_cols;
wire   [11:0] toGray_Block_proc_U0_ap_return_0;
wire   [11:0] toGray_Block_proc_U0_ap_return_1;
wire   [11:0] toGray_Block_proc_U0_ap_return_2;
wire   [11:0] toGray_Block_proc_U0_ap_return_3;
wire   [11:0] toGray_Block_proc_U0_ap_return_4;
wire   [11:0] toGray_Block_proc_U0_ap_return_5;
wire   [11:0] toGray_Block_proc_U0_ap_return_6;
wire   [11:0] toGray_Block_proc_U0_ap_return_7;
reg    ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel;
wire    inMat_cols_V_channel_full_n;
reg    ap_reg_ready_inMat_cols_V_channel_full_n = 1'b0;
reg    ap_sig_ready_inMat_cols_V_channel_full_n;
reg    ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel1;
wire    inMat_rows_V_channel1_full_n;
reg    ap_reg_ready_inMat_rows_V_channel1_full_n = 1'b0;
reg    ap_sig_ready_inMat_rows_V_channel1_full_n;
reg    ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel;
wire    inMat_rows_V_channel_full_n;
reg    ap_reg_ready_inMat_rows_V_channel_full_n = 1'b0;
reg    ap_sig_ready_inMat_rows_V_channel_full_n;
reg    ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel1;
wire    inMat_cols_V_channel1_full_n;
reg    ap_reg_ready_inMat_cols_V_channel1_full_n = 1'b0;
reg    ap_sig_ready_inMat_cols_V_channel1_full_n;
reg    ap_chn_write_toGray_Block_proc_U0_grayMat_rows_V;
wire    grayMat_rows_V_full_n;
reg    ap_reg_ready_grayMat_rows_V_full_n = 1'b0;
reg    ap_sig_ready_grayMat_rows_V_full_n;
reg    ap_chn_write_toGray_Block_proc_U0_grayMat_cols_V;
wire    grayMat_cols_V_full_n;
reg    ap_reg_ready_grayMat_cols_V_full_n = 1'b0;
reg    ap_sig_ready_grayMat_cols_V_full_n;
reg    ap_chn_write_toGray_Block_proc_U0_outMat_rows_V;
wire    outMat_rows_V_full_n;
reg    ap_reg_ready_outMat_rows_V_full_n = 1'b0;
reg    ap_sig_ready_outMat_rows_V_full_n;
reg    ap_chn_write_toGray_Block_proc_U0_outMat_cols_V;
wire    outMat_cols_V_full_n;
reg    ap_reg_ready_outMat_cols_V_full_n = 1'b0;
reg    ap_sig_ready_outMat_cols_V_full_n;
wire    toGray_AXIvideo2Mat_U0_ap_start;
wire    toGray_AXIvideo2Mat_U0_ap_done;
wire    toGray_AXIvideo2Mat_U0_ap_continue;
wire    toGray_AXIvideo2Mat_U0_ap_idle;
wire    toGray_AXIvideo2Mat_U0_ap_ready;
wire   [23:0] toGray_AXIvideo2Mat_U0_IN_STREAM_TDATA;
wire    toGray_AXIvideo2Mat_U0_IN_STREAM_TVALID;
wire    toGray_AXIvideo2Mat_U0_IN_STREAM_TREADY;
wire   [2:0] toGray_AXIvideo2Mat_U0_IN_STREAM_TKEEP;
wire   [2:0] toGray_AXIvideo2Mat_U0_IN_STREAM_TSTRB;
wire   [0:0] toGray_AXIvideo2Mat_U0_IN_STREAM_TUSER;
wire   [0:0] toGray_AXIvideo2Mat_U0_IN_STREAM_TLAST;
wire   [0:0] toGray_AXIvideo2Mat_U0_IN_STREAM_TID;
wire   [0:0] toGray_AXIvideo2Mat_U0_IN_STREAM_TDEST;
wire   [11:0] toGray_AXIvideo2Mat_U0_img_rows_V_read;
wire   [11:0] toGray_AXIvideo2Mat_U0_img_cols_V_read;
wire   [7:0] toGray_AXIvideo2Mat_U0_img_data_stream_0_V_din;
wire    toGray_AXIvideo2Mat_U0_img_data_stream_0_V_full_n;
wire    toGray_AXIvideo2Mat_U0_img_data_stream_0_V_write;
wire   [7:0] toGray_AXIvideo2Mat_U0_img_data_stream_1_V_din;
wire    toGray_AXIvideo2Mat_U0_img_data_stream_1_V_full_n;
wire    toGray_AXIvideo2Mat_U0_img_data_stream_1_V_write;
wire   [7:0] toGray_AXIvideo2Mat_U0_img_data_stream_2_V_din;
wire    toGray_AXIvideo2Mat_U0_img_data_stream_2_V_full_n;
wire    toGray_AXIvideo2Mat_U0_img_data_stream_2_V_write;
wire    toGray_CvtColor_U0_ap_start;
wire    toGray_CvtColor_U0_ap_done;
wire    toGray_CvtColor_U0_ap_continue;
wire    toGray_CvtColor_U0_ap_idle;
wire    toGray_CvtColor_U0_ap_ready;
wire   [11:0] toGray_CvtColor_U0_p_src_rows_V_read;
wire   [11:0] toGray_CvtColor_U0_p_src_cols_V_read;
wire   [7:0] toGray_CvtColor_U0_p_src_data_stream_0_V_dout;
wire    toGray_CvtColor_U0_p_src_data_stream_0_V_empty_n;
wire    toGray_CvtColor_U0_p_src_data_stream_0_V_read;
wire   [7:0] toGray_CvtColor_U0_p_src_data_stream_1_V_dout;
wire    toGray_CvtColor_U0_p_src_data_stream_1_V_empty_n;
wire    toGray_CvtColor_U0_p_src_data_stream_1_V_read;
wire   [7:0] toGray_CvtColor_U0_p_src_data_stream_2_V_dout;
wire    toGray_CvtColor_U0_p_src_data_stream_2_V_empty_n;
wire    toGray_CvtColor_U0_p_src_data_stream_2_V_read;
wire   [7:0] toGray_CvtColor_U0_p_dst_data_stream_V_din;
wire    toGray_CvtColor_U0_p_dst_data_stream_V_full_n;
wire    toGray_CvtColor_U0_p_dst_data_stream_V_write;
wire    toGray_Equalize_U0_ap_start;
wire    toGray_Equalize_U0_ap_done;
wire    toGray_Equalize_U0_ap_continue;
wire    toGray_Equalize_U0_ap_idle;
wire    toGray_Equalize_U0_ap_ready;
wire   [11:0] toGray_Equalize_U0_p_src_rows_V_read;
wire   [11:0] toGray_Equalize_U0_p_src_cols_V_read;
wire   [7:0] toGray_Equalize_U0_p_src_data_stream_V_dout;
wire    toGray_Equalize_U0_p_src_data_stream_V_empty_n;
wire    toGray_Equalize_U0_p_src_data_stream_V_read;
wire   [7:0] toGray_Equalize_U0_p_dst_data_stream_V_din;
wire    toGray_Equalize_U0_p_dst_data_stream_V_full_n;
wire    toGray_Equalize_U0_p_dst_data_stream_V_write;
wire    toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_start;
wire    toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_done;
wire    toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_continue;
wire    toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_idle;
wire    toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_ready;
wire   [11:0] toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_rows_V_read;
wire   [11:0] toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_cols_V_read;
wire   [7:0] toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_dout;
wire    toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_empty_n;
wire    toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_read;
wire   [7:0] toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDATA;
wire    toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TVALID;
wire    toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TREADY;
wire   [0:0] toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TKEEP;
wire   [0:0] toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TSTRB;
wire   [0:0] toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TUSER;
wire   [0:0] toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TLAST;
wire   [0:0] toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TID;
wire   [0:0] toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDEST;
wire    ap_sig_hs_continue;
wire    inMat_rows_V_channel_U_ap_dummy_ce;
wire   [11:0] inMat_rows_V_channel_din;
wire    inMat_rows_V_channel_write;
wire   [11:0] inMat_rows_V_channel_dout;
wire    inMat_rows_V_channel_empty_n;
wire    inMat_rows_V_channel_read;
wire    inMat_rows_V_channel1_U_ap_dummy_ce;
wire   [11:0] inMat_rows_V_channel1_din;
wire    inMat_rows_V_channel1_write;
wire   [11:0] inMat_rows_V_channel1_dout;
wire    inMat_rows_V_channel1_empty_n;
wire    inMat_rows_V_channel1_read;
wire    inMat_cols_V_channel_U_ap_dummy_ce;
wire   [11:0] inMat_cols_V_channel_din;
wire    inMat_cols_V_channel_write;
wire   [11:0] inMat_cols_V_channel_dout;
wire    inMat_cols_V_channel_empty_n;
wire    inMat_cols_V_channel_read;
wire    inMat_cols_V_channel1_U_ap_dummy_ce;
wire   [11:0] inMat_cols_V_channel1_din;
wire    inMat_cols_V_channel1_write;
wire   [11:0] inMat_cols_V_channel1_dout;
wire    inMat_cols_V_channel1_empty_n;
wire    inMat_cols_V_channel1_read;
wire    grayMat_rows_V_U_ap_dummy_ce;
wire   [11:0] grayMat_rows_V_din;
wire    grayMat_rows_V_write;
wire   [11:0] grayMat_rows_V_dout;
wire    grayMat_rows_V_empty_n;
wire    grayMat_rows_V_read;
wire    grayMat_cols_V_U_ap_dummy_ce;
wire   [11:0] grayMat_cols_V_din;
wire    grayMat_cols_V_write;
wire   [11:0] grayMat_cols_V_dout;
wire    grayMat_cols_V_empty_n;
wire    grayMat_cols_V_read;
wire    outMat_rows_V_U_ap_dummy_ce;
wire   [11:0] outMat_rows_V_din;
wire    outMat_rows_V_write;
wire   [11:0] outMat_rows_V_dout;
wire    outMat_rows_V_empty_n;
wire    outMat_rows_V_read;
wire    outMat_cols_V_U_ap_dummy_ce;
wire   [11:0] outMat_cols_V_din;
wire    outMat_cols_V_write;
wire   [11:0] outMat_cols_V_dout;
wire    outMat_cols_V_empty_n;
wire    outMat_cols_V_read;
wire    inMat_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] inMat_data_stream_0_V_din;
wire    inMat_data_stream_0_V_full_n;
wire    inMat_data_stream_0_V_write;
wire   [7:0] inMat_data_stream_0_V_dout;
wire    inMat_data_stream_0_V_empty_n;
wire    inMat_data_stream_0_V_read;
wire    inMat_data_stream_1_V_U_ap_dummy_ce;
wire   [7:0] inMat_data_stream_1_V_din;
wire    inMat_data_stream_1_V_full_n;
wire    inMat_data_stream_1_V_write;
wire   [7:0] inMat_data_stream_1_V_dout;
wire    inMat_data_stream_1_V_empty_n;
wire    inMat_data_stream_1_V_read;
wire    inMat_data_stream_2_V_U_ap_dummy_ce;
wire   [7:0] inMat_data_stream_2_V_din;
wire    inMat_data_stream_2_V_full_n;
wire    inMat_data_stream_2_V_write;
wire   [7:0] inMat_data_stream_2_V_dout;
wire    inMat_data_stream_2_V_empty_n;
wire    inMat_data_stream_2_V_read;
wire    grayMat_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] grayMat_data_stream_0_V_din;
wire    grayMat_data_stream_0_V_full_n;
wire    grayMat_data_stream_0_V_write;
wire   [7:0] grayMat_data_stream_0_V_dout;
wire    grayMat_data_stream_0_V_empty_n;
wire    grayMat_data_stream_0_V_read;
wire    outMat_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] outMat_data_stream_0_V_din;
wire    outMat_data_stream_0_V_full_n;
wire    outMat_data_stream_0_V_write;
wire   [7:0] outMat_data_stream_0_V_dout;
wire    outMat_data_stream_0_V_empty_n;
wire    outMat_data_stream_0_V_read;
reg    ap_reg_procdone_toGray_Block_proc_U0 = 1'b0;
reg    ap_sig_hs_done;
reg    ap_reg_procdone_toGray_AXIvideo2Mat_U0 = 1'b0;
reg    ap_reg_procdone_toGray_CvtColor_U0 = 1'b0;
reg    ap_reg_procdone_toGray_Equalize_U0 = 1'b0;
reg    ap_reg_procdone_toGray_Mat2AXIvideo_8_1080_1920_0_U0 = 1'b0;
reg    ap_CS;
wire    ap_sig_top_allready;


toGray_Block_proc toGray_Block_proc_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( toGray_Block_proc_U0_ap_start ),
    .ap_done( toGray_Block_proc_U0_ap_done ),
    .ap_continue( toGray_Block_proc_U0_ap_continue ),
    .ap_idle( toGray_Block_proc_U0_ap_idle ),
    .ap_ready( toGray_Block_proc_U0_ap_ready ),
    .rows( toGray_Block_proc_U0_rows ),
    .cols( toGray_Block_proc_U0_cols ),
    .ap_return_0( toGray_Block_proc_U0_ap_return_0 ),
    .ap_return_1( toGray_Block_proc_U0_ap_return_1 ),
    .ap_return_2( toGray_Block_proc_U0_ap_return_2 ),
    .ap_return_3( toGray_Block_proc_U0_ap_return_3 ),
    .ap_return_4( toGray_Block_proc_U0_ap_return_4 ),
    .ap_return_5( toGray_Block_proc_U0_ap_return_5 ),
    .ap_return_6( toGray_Block_proc_U0_ap_return_6 ),
    .ap_return_7( toGray_Block_proc_U0_ap_return_7 )
);

toGray_AXIvideo2Mat toGray_AXIvideo2Mat_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( toGray_AXIvideo2Mat_U0_ap_start ),
    .ap_done( toGray_AXIvideo2Mat_U0_ap_done ),
    .ap_continue( toGray_AXIvideo2Mat_U0_ap_continue ),
    .ap_idle( toGray_AXIvideo2Mat_U0_ap_idle ),
    .ap_ready( toGray_AXIvideo2Mat_U0_ap_ready ),
    .IN_STREAM_TDATA( toGray_AXIvideo2Mat_U0_IN_STREAM_TDATA ),
    .IN_STREAM_TVALID( toGray_AXIvideo2Mat_U0_IN_STREAM_TVALID ),
    .IN_STREAM_TREADY( toGray_AXIvideo2Mat_U0_IN_STREAM_TREADY ),
    .IN_STREAM_TKEEP( toGray_AXIvideo2Mat_U0_IN_STREAM_TKEEP ),
    .IN_STREAM_TSTRB( toGray_AXIvideo2Mat_U0_IN_STREAM_TSTRB ),
    .IN_STREAM_TUSER( toGray_AXIvideo2Mat_U0_IN_STREAM_TUSER ),
    .IN_STREAM_TLAST( toGray_AXIvideo2Mat_U0_IN_STREAM_TLAST ),
    .IN_STREAM_TID( toGray_AXIvideo2Mat_U0_IN_STREAM_TID ),
    .IN_STREAM_TDEST( toGray_AXIvideo2Mat_U0_IN_STREAM_TDEST ),
    .img_rows_V_read( toGray_AXIvideo2Mat_U0_img_rows_V_read ),
    .img_cols_V_read( toGray_AXIvideo2Mat_U0_img_cols_V_read ),
    .img_data_stream_0_V_din( toGray_AXIvideo2Mat_U0_img_data_stream_0_V_din ),
    .img_data_stream_0_V_full_n( toGray_AXIvideo2Mat_U0_img_data_stream_0_V_full_n ),
    .img_data_stream_0_V_write( toGray_AXIvideo2Mat_U0_img_data_stream_0_V_write ),
    .img_data_stream_1_V_din( toGray_AXIvideo2Mat_U0_img_data_stream_1_V_din ),
    .img_data_stream_1_V_full_n( toGray_AXIvideo2Mat_U0_img_data_stream_1_V_full_n ),
    .img_data_stream_1_V_write( toGray_AXIvideo2Mat_U0_img_data_stream_1_V_write ),
    .img_data_stream_2_V_din( toGray_AXIvideo2Mat_U0_img_data_stream_2_V_din ),
    .img_data_stream_2_V_full_n( toGray_AXIvideo2Mat_U0_img_data_stream_2_V_full_n ),
    .img_data_stream_2_V_write( toGray_AXIvideo2Mat_U0_img_data_stream_2_V_write )
);

toGray_CvtColor toGray_CvtColor_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( toGray_CvtColor_U0_ap_start ),
    .ap_done( toGray_CvtColor_U0_ap_done ),
    .ap_continue( toGray_CvtColor_U0_ap_continue ),
    .ap_idle( toGray_CvtColor_U0_ap_idle ),
    .ap_ready( toGray_CvtColor_U0_ap_ready ),
    .p_src_rows_V_read( toGray_CvtColor_U0_p_src_rows_V_read ),
    .p_src_cols_V_read( toGray_CvtColor_U0_p_src_cols_V_read ),
    .p_src_data_stream_0_V_dout( toGray_CvtColor_U0_p_src_data_stream_0_V_dout ),
    .p_src_data_stream_0_V_empty_n( toGray_CvtColor_U0_p_src_data_stream_0_V_empty_n ),
    .p_src_data_stream_0_V_read( toGray_CvtColor_U0_p_src_data_stream_0_V_read ),
    .p_src_data_stream_1_V_dout( toGray_CvtColor_U0_p_src_data_stream_1_V_dout ),
    .p_src_data_stream_1_V_empty_n( toGray_CvtColor_U0_p_src_data_stream_1_V_empty_n ),
    .p_src_data_stream_1_V_read( toGray_CvtColor_U0_p_src_data_stream_1_V_read ),
    .p_src_data_stream_2_V_dout( toGray_CvtColor_U0_p_src_data_stream_2_V_dout ),
    .p_src_data_stream_2_V_empty_n( toGray_CvtColor_U0_p_src_data_stream_2_V_empty_n ),
    .p_src_data_stream_2_V_read( toGray_CvtColor_U0_p_src_data_stream_2_V_read ),
    .p_dst_data_stream_V_din( toGray_CvtColor_U0_p_dst_data_stream_V_din ),
    .p_dst_data_stream_V_full_n( toGray_CvtColor_U0_p_dst_data_stream_V_full_n ),
    .p_dst_data_stream_V_write( toGray_CvtColor_U0_p_dst_data_stream_V_write )
);

toGray_Equalize toGray_Equalize_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( toGray_Equalize_U0_ap_start ),
    .ap_done( toGray_Equalize_U0_ap_done ),
    .ap_continue( toGray_Equalize_U0_ap_continue ),
    .ap_idle( toGray_Equalize_U0_ap_idle ),
    .ap_ready( toGray_Equalize_U0_ap_ready ),
    .p_src_rows_V_read( toGray_Equalize_U0_p_src_rows_V_read ),
    .p_src_cols_V_read( toGray_Equalize_U0_p_src_cols_V_read ),
    .p_src_data_stream_V_dout( toGray_Equalize_U0_p_src_data_stream_V_dout ),
    .p_src_data_stream_V_empty_n( toGray_Equalize_U0_p_src_data_stream_V_empty_n ),
    .p_src_data_stream_V_read( toGray_Equalize_U0_p_src_data_stream_V_read ),
    .p_dst_data_stream_V_din( toGray_Equalize_U0_p_dst_data_stream_V_din ),
    .p_dst_data_stream_V_full_n( toGray_Equalize_U0_p_dst_data_stream_V_full_n ),
    .p_dst_data_stream_V_write( toGray_Equalize_U0_p_dst_data_stream_V_write )
);

toGray_Mat2AXIvideo_8_1080_1920_0_s toGray_Mat2AXIvideo_8_1080_1920_0_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_start ),
    .ap_done( toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_done ),
    .ap_continue( toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_continue ),
    .ap_idle( toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_idle ),
    .ap_ready( toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_ready ),
    .img_rows_V_read( toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_rows_V_read ),
    .img_cols_V_read( toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_cols_V_read ),
    .img_data_stream_V_dout( toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_dout ),
    .img_data_stream_V_empty_n( toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_empty_n ),
    .img_data_stream_V_read( toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_read ),
    .OUT_STREAM_TDATA( toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDATA ),
    .OUT_STREAM_TVALID( toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TVALID ),
    .OUT_STREAM_TREADY( toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TREADY ),
    .OUT_STREAM_TKEEP( toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TKEEP ),
    .OUT_STREAM_TSTRB( toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TSTRB ),
    .OUT_STREAM_TUSER( toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TUSER ),
    .OUT_STREAM_TLAST( toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TLAST ),
    .OUT_STREAM_TID( toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TID ),
    .OUT_STREAM_TDEST( toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDEST )
);

FIFO_toGray_inMat_rows_V_channel inMat_rows_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( inMat_rows_V_channel_U_ap_dummy_ce ),
    .if_write_ce( inMat_rows_V_channel_U_ap_dummy_ce ),
    .if_din( inMat_rows_V_channel_din ),
    .if_full_n( inMat_rows_V_channel_full_n ),
    .if_write( inMat_rows_V_channel_write ),
    .if_dout( inMat_rows_V_channel_dout ),
    .if_empty_n( inMat_rows_V_channel_empty_n ),
    .if_read( inMat_rows_V_channel_read )
);

FIFO_toGray_inMat_rows_V_channel1 inMat_rows_V_channel1_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( inMat_rows_V_channel1_U_ap_dummy_ce ),
    .if_write_ce( inMat_rows_V_channel1_U_ap_dummy_ce ),
    .if_din( inMat_rows_V_channel1_din ),
    .if_full_n( inMat_rows_V_channel1_full_n ),
    .if_write( inMat_rows_V_channel1_write ),
    .if_dout( inMat_rows_V_channel1_dout ),
    .if_empty_n( inMat_rows_V_channel1_empty_n ),
    .if_read( inMat_rows_V_channel1_read )
);

FIFO_toGray_inMat_cols_V_channel inMat_cols_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( inMat_cols_V_channel_U_ap_dummy_ce ),
    .if_write_ce( inMat_cols_V_channel_U_ap_dummy_ce ),
    .if_din( inMat_cols_V_channel_din ),
    .if_full_n( inMat_cols_V_channel_full_n ),
    .if_write( inMat_cols_V_channel_write ),
    .if_dout( inMat_cols_V_channel_dout ),
    .if_empty_n( inMat_cols_V_channel_empty_n ),
    .if_read( inMat_cols_V_channel_read )
);

FIFO_toGray_inMat_cols_V_channel1 inMat_cols_V_channel1_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( inMat_cols_V_channel1_U_ap_dummy_ce ),
    .if_write_ce( inMat_cols_V_channel1_U_ap_dummy_ce ),
    .if_din( inMat_cols_V_channel1_din ),
    .if_full_n( inMat_cols_V_channel1_full_n ),
    .if_write( inMat_cols_V_channel1_write ),
    .if_dout( inMat_cols_V_channel1_dout ),
    .if_empty_n( inMat_cols_V_channel1_empty_n ),
    .if_read( inMat_cols_V_channel1_read )
);

FIFO_toGray_grayMat_rows_V grayMat_rows_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( grayMat_rows_V_U_ap_dummy_ce ),
    .if_write_ce( grayMat_rows_V_U_ap_dummy_ce ),
    .if_din( grayMat_rows_V_din ),
    .if_full_n( grayMat_rows_V_full_n ),
    .if_write( grayMat_rows_V_write ),
    .if_dout( grayMat_rows_V_dout ),
    .if_empty_n( grayMat_rows_V_empty_n ),
    .if_read( grayMat_rows_V_read )
);

FIFO_toGray_grayMat_cols_V grayMat_cols_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( grayMat_cols_V_U_ap_dummy_ce ),
    .if_write_ce( grayMat_cols_V_U_ap_dummy_ce ),
    .if_din( grayMat_cols_V_din ),
    .if_full_n( grayMat_cols_V_full_n ),
    .if_write( grayMat_cols_V_write ),
    .if_dout( grayMat_cols_V_dout ),
    .if_empty_n( grayMat_cols_V_empty_n ),
    .if_read( grayMat_cols_V_read )
);

FIFO_toGray_outMat_rows_V outMat_rows_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( outMat_rows_V_U_ap_dummy_ce ),
    .if_write_ce( outMat_rows_V_U_ap_dummy_ce ),
    .if_din( outMat_rows_V_din ),
    .if_full_n( outMat_rows_V_full_n ),
    .if_write( outMat_rows_V_write ),
    .if_dout( outMat_rows_V_dout ),
    .if_empty_n( outMat_rows_V_empty_n ),
    .if_read( outMat_rows_V_read )
);

FIFO_toGray_outMat_cols_V outMat_cols_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( outMat_cols_V_U_ap_dummy_ce ),
    .if_write_ce( outMat_cols_V_U_ap_dummy_ce ),
    .if_din( outMat_cols_V_din ),
    .if_full_n( outMat_cols_V_full_n ),
    .if_write( outMat_cols_V_write ),
    .if_dout( outMat_cols_V_dout ),
    .if_empty_n( outMat_cols_V_empty_n ),
    .if_read( outMat_cols_V_read )
);

FIFO_toGray_inMat_data_stream_0_V inMat_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( inMat_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( inMat_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( inMat_data_stream_0_V_din ),
    .if_full_n( inMat_data_stream_0_V_full_n ),
    .if_write( inMat_data_stream_0_V_write ),
    .if_dout( inMat_data_stream_0_V_dout ),
    .if_empty_n( inMat_data_stream_0_V_empty_n ),
    .if_read( inMat_data_stream_0_V_read )
);

FIFO_toGray_inMat_data_stream_1_V inMat_data_stream_1_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( inMat_data_stream_1_V_U_ap_dummy_ce ),
    .if_write_ce( inMat_data_stream_1_V_U_ap_dummy_ce ),
    .if_din( inMat_data_stream_1_V_din ),
    .if_full_n( inMat_data_stream_1_V_full_n ),
    .if_write( inMat_data_stream_1_V_write ),
    .if_dout( inMat_data_stream_1_V_dout ),
    .if_empty_n( inMat_data_stream_1_V_empty_n ),
    .if_read( inMat_data_stream_1_V_read )
);

FIFO_toGray_inMat_data_stream_2_V inMat_data_stream_2_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( inMat_data_stream_2_V_U_ap_dummy_ce ),
    .if_write_ce( inMat_data_stream_2_V_U_ap_dummy_ce ),
    .if_din( inMat_data_stream_2_V_din ),
    .if_full_n( inMat_data_stream_2_V_full_n ),
    .if_write( inMat_data_stream_2_V_write ),
    .if_dout( inMat_data_stream_2_V_dout ),
    .if_empty_n( inMat_data_stream_2_V_empty_n ),
    .if_read( inMat_data_stream_2_V_read )
);

FIFO_toGray_grayMat_data_stream_0_V grayMat_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( grayMat_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( grayMat_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( grayMat_data_stream_0_V_din ),
    .if_full_n( grayMat_data_stream_0_V_full_n ),
    .if_write( grayMat_data_stream_0_V_write ),
    .if_dout( grayMat_data_stream_0_V_dout ),
    .if_empty_n( grayMat_data_stream_0_V_empty_n ),
    .if_read( grayMat_data_stream_0_V_read )
);

FIFO_toGray_outMat_data_stream_0_V outMat_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( outMat_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( outMat_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( outMat_data_stream_0_V_din ),
    .if_full_n( outMat_data_stream_0_V_full_n ),
    .if_write( outMat_data_stream_0_V_write ),
    .if_dout( outMat_data_stream_0_V_dout ),
    .if_empty_n( outMat_data_stream_0_V_empty_n ),
    .if_read( outMat_data_stream_0_V_read )
);



/// ap_reg_procdone_toGray_AXIvideo2Mat_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_toGray_AXIvideo2Mat_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_toGray_AXIvideo2Mat_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_toGray_AXIvideo2Mat_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == toGray_AXIvideo2Mat_U0_ap_done)) begin
            ap_reg_procdone_toGray_AXIvideo2Mat_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_toGray_Block_proc_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_toGray_Block_proc_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_toGray_Block_proc_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_toGray_Block_proc_U0 <= ap_const_logic_0;
        end else if ((toGray_Block_proc_U0_ap_done == ap_const_logic_1)) begin
            ap_reg_procdone_toGray_Block_proc_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_toGray_CvtColor_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_toGray_CvtColor_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_toGray_CvtColor_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_toGray_CvtColor_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == toGray_CvtColor_U0_ap_done)) begin
            ap_reg_procdone_toGray_CvtColor_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_toGray_Equalize_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_toGray_Equalize_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_toGray_Equalize_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_toGray_Equalize_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == toGray_Equalize_U0_ap_done)) begin
            ap_reg_procdone_toGray_Equalize_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_toGray_Mat2AXIvideo_8_1080_1920_0_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_toGray_Mat2AXIvideo_8_1080_1920_0_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_toGray_Mat2AXIvideo_8_1080_1920_0_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_toGray_Mat2AXIvideo_8_1080_1920_0_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_done)) begin
            ap_reg_procdone_toGray_Mat2AXIvideo_8_1080_1920_0_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_grayMat_cols_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_grayMat_cols_V_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_grayMat_cols_V_full_n <= ap_const_logic_0;
    end else begin
        if (((toGray_Block_proc_U0_ap_done == ap_const_logic_1) & (toGray_Block_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_grayMat_cols_V_full_n <= ap_const_logic_0;
        end else if (((toGray_Block_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == grayMat_cols_V_full_n))) begin
            ap_reg_ready_grayMat_cols_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_grayMat_rows_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_grayMat_rows_V_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_grayMat_rows_V_full_n <= ap_const_logic_0;
    end else begin
        if (((toGray_Block_proc_U0_ap_done == ap_const_logic_1) & (toGray_Block_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_grayMat_rows_V_full_n <= ap_const_logic_0;
        end else if (((toGray_Block_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == grayMat_rows_V_full_n))) begin
            ap_reg_ready_grayMat_rows_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_inMat_cols_V_channel1_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_inMat_cols_V_channel1_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_inMat_cols_V_channel1_full_n <= ap_const_logic_0;
    end else begin
        if (((toGray_Block_proc_U0_ap_done == ap_const_logic_1) & (toGray_Block_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_inMat_cols_V_channel1_full_n <= ap_const_logic_0;
        end else if (((toGray_Block_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == inMat_cols_V_channel1_full_n))) begin
            ap_reg_ready_inMat_cols_V_channel1_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_inMat_cols_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_inMat_cols_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_inMat_cols_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((toGray_Block_proc_U0_ap_done == ap_const_logic_1) & (toGray_Block_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_inMat_cols_V_channel_full_n <= ap_const_logic_0;
        end else if (((toGray_Block_proc_U0_ap_done == ap_const_logic_1) & (inMat_cols_V_channel_full_n == ap_const_logic_1))) begin
            ap_reg_ready_inMat_cols_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_inMat_rows_V_channel1_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_inMat_rows_V_channel1_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_inMat_rows_V_channel1_full_n <= ap_const_logic_0;
    end else begin
        if (((toGray_Block_proc_U0_ap_done == ap_const_logic_1) & (toGray_Block_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_inMat_rows_V_channel1_full_n <= ap_const_logic_0;
        end else if (((toGray_Block_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == inMat_rows_V_channel1_full_n))) begin
            ap_reg_ready_inMat_rows_V_channel1_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_inMat_rows_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_inMat_rows_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_inMat_rows_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((toGray_Block_proc_U0_ap_done == ap_const_logic_1) & (toGray_Block_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_inMat_rows_V_channel_full_n <= ap_const_logic_0;
        end else if (((toGray_Block_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == inMat_rows_V_channel_full_n))) begin
            ap_reg_ready_inMat_rows_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_outMat_cols_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_outMat_cols_V_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_outMat_cols_V_full_n <= ap_const_logic_0;
    end else begin
        if (((toGray_Block_proc_U0_ap_done == ap_const_logic_1) & (toGray_Block_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_outMat_cols_V_full_n <= ap_const_logic_0;
        end else if (((toGray_Block_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == outMat_cols_V_full_n))) begin
            ap_reg_ready_outMat_cols_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_outMat_rows_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_outMat_rows_V_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_outMat_rows_V_full_n <= ap_const_logic_0;
    end else begin
        if (((toGray_Block_proc_U0_ap_done == ap_const_logic_1) & (toGray_Block_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_outMat_rows_V_full_n <= ap_const_logic_0;
        end else if (((toGray_Block_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == outMat_rows_V_full_n))) begin
            ap_reg_ready_outMat_rows_V_full_n <= ap_const_logic_1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    ap_CS <= ap_const_logic_0;
end

/// ap_chn_write_toGray_Block_proc_U0_grayMat_cols_V assign process. ///
always @ (toGray_Block_proc_U0_ap_done or ap_reg_ready_grayMat_cols_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_grayMat_cols_V_full_n)) begin
        ap_chn_write_toGray_Block_proc_U0_grayMat_cols_V = ap_const_logic_0;
    end else begin
        ap_chn_write_toGray_Block_proc_U0_grayMat_cols_V = toGray_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_toGray_Block_proc_U0_grayMat_rows_V assign process. ///
always @ (toGray_Block_proc_U0_ap_done or ap_reg_ready_grayMat_rows_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_grayMat_rows_V_full_n)) begin
        ap_chn_write_toGray_Block_proc_U0_grayMat_rows_V = ap_const_logic_0;
    end else begin
        ap_chn_write_toGray_Block_proc_U0_grayMat_rows_V = toGray_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel assign process. ///
always @ (toGray_Block_proc_U0_ap_done or ap_reg_ready_inMat_cols_V_channel_full_n)
begin
    if ((ap_reg_ready_inMat_cols_V_channel_full_n == ap_const_logic_1)) begin
        ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel = toGray_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel1 assign process. ///
always @ (toGray_Block_proc_U0_ap_done or ap_reg_ready_inMat_cols_V_channel1_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_inMat_cols_V_channel1_full_n)) begin
        ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel1 = ap_const_logic_0;
    end else begin
        ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel1 = toGray_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel assign process. ///
always @ (toGray_Block_proc_U0_ap_done or ap_reg_ready_inMat_rows_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_inMat_rows_V_channel_full_n)) begin
        ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel = toGray_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel1 assign process. ///
always @ (toGray_Block_proc_U0_ap_done or ap_reg_ready_inMat_rows_V_channel1_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_inMat_rows_V_channel1_full_n)) begin
        ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel1 = ap_const_logic_0;
    end else begin
        ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel1 = toGray_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_toGray_Block_proc_U0_outMat_cols_V assign process. ///
always @ (toGray_Block_proc_U0_ap_done or ap_reg_ready_outMat_cols_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_outMat_cols_V_full_n)) begin
        ap_chn_write_toGray_Block_proc_U0_outMat_cols_V = ap_const_logic_0;
    end else begin
        ap_chn_write_toGray_Block_proc_U0_outMat_cols_V = toGray_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_toGray_Block_proc_U0_outMat_rows_V assign process. ///
always @ (toGray_Block_proc_U0_ap_done or ap_reg_ready_outMat_rows_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_outMat_rows_V_full_n)) begin
        ap_chn_write_toGray_Block_proc_U0_outMat_rows_V = ap_const_logic_0;
    end else begin
        ap_chn_write_toGray_Block_proc_U0_outMat_rows_V = toGray_Block_proc_U0_ap_done;
    end
end

/// ap_idle assign process. ///
always @ (toGray_Block_proc_U0_ap_idle or toGray_AXIvideo2Mat_U0_ap_idle or toGray_CvtColor_U0_ap_idle or toGray_Equalize_U0_ap_idle or toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_idle or inMat_rows_V_channel_empty_n or inMat_rows_V_channel1_empty_n or inMat_cols_V_channel_empty_n or inMat_cols_V_channel1_empty_n or grayMat_rows_V_empty_n or grayMat_cols_V_empty_n or outMat_rows_V_empty_n or outMat_cols_V_empty_n)
begin
    if (((toGray_Block_proc_U0_ap_idle == ap_const_logic_1) & (ap_const_logic_1 == toGray_AXIvideo2Mat_U0_ap_idle) & (ap_const_logic_1 == toGray_CvtColor_U0_ap_idle) & (ap_const_logic_1 == toGray_Equalize_U0_ap_idle) & (ap_const_logic_1 == toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_idle) & (ap_const_logic_0 == inMat_rows_V_channel_empty_n) & (ap_const_logic_0 == inMat_rows_V_channel1_empty_n) & (ap_const_logic_0 == inMat_cols_V_channel_empty_n) & (ap_const_logic_0 == inMat_cols_V_channel1_empty_n) & (ap_const_logic_0 == grayMat_rows_V_empty_n) & (ap_const_logic_0 == grayMat_cols_V_empty_n) & (ap_const_logic_0 == outMat_rows_V_empty_n) & (ap_const_logic_0 == outMat_cols_V_empty_n))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_sig_hs_done assign process. ///
always @ (toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_done)
begin
    if ((ap_const_logic_1 == toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_done)) begin
        ap_sig_hs_done = ap_const_logic_1;
    end else begin
        ap_sig_hs_done = ap_const_logic_0;
    end
end

/// ap_sig_ready_grayMat_cols_V_full_n assign process. ///
always @ (grayMat_cols_V_full_n or ap_reg_ready_grayMat_cols_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_grayMat_cols_V_full_n)) begin
        ap_sig_ready_grayMat_cols_V_full_n = grayMat_cols_V_full_n;
    end else begin
        ap_sig_ready_grayMat_cols_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_grayMat_rows_V_full_n assign process. ///
always @ (grayMat_rows_V_full_n or ap_reg_ready_grayMat_rows_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_grayMat_rows_V_full_n)) begin
        ap_sig_ready_grayMat_rows_V_full_n = grayMat_rows_V_full_n;
    end else begin
        ap_sig_ready_grayMat_rows_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_inMat_cols_V_channel1_full_n assign process. ///
always @ (inMat_cols_V_channel1_full_n or ap_reg_ready_inMat_cols_V_channel1_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_inMat_cols_V_channel1_full_n)) begin
        ap_sig_ready_inMat_cols_V_channel1_full_n = inMat_cols_V_channel1_full_n;
    end else begin
        ap_sig_ready_inMat_cols_V_channel1_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_inMat_cols_V_channel_full_n assign process. ///
always @ (inMat_cols_V_channel_full_n or ap_reg_ready_inMat_cols_V_channel_full_n)
begin
    if ((ap_reg_ready_inMat_cols_V_channel_full_n == ap_const_logic_0)) begin
        ap_sig_ready_inMat_cols_V_channel_full_n = inMat_cols_V_channel_full_n;
    end else begin
        ap_sig_ready_inMat_cols_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_inMat_rows_V_channel1_full_n assign process. ///
always @ (inMat_rows_V_channel1_full_n or ap_reg_ready_inMat_rows_V_channel1_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_inMat_rows_V_channel1_full_n)) begin
        ap_sig_ready_inMat_rows_V_channel1_full_n = inMat_rows_V_channel1_full_n;
    end else begin
        ap_sig_ready_inMat_rows_V_channel1_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_inMat_rows_V_channel_full_n assign process. ///
always @ (inMat_rows_V_channel_full_n or ap_reg_ready_inMat_rows_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_inMat_rows_V_channel_full_n)) begin
        ap_sig_ready_inMat_rows_V_channel_full_n = inMat_rows_V_channel_full_n;
    end else begin
        ap_sig_ready_inMat_rows_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_outMat_cols_V_full_n assign process. ///
always @ (outMat_cols_V_full_n or ap_reg_ready_outMat_cols_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_outMat_cols_V_full_n)) begin
        ap_sig_ready_outMat_cols_V_full_n = outMat_cols_V_full_n;
    end else begin
        ap_sig_ready_outMat_cols_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_outMat_rows_V_full_n assign process. ///
always @ (outMat_rows_V_full_n or ap_reg_ready_outMat_rows_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_outMat_rows_V_full_n)) begin
        ap_sig_ready_outMat_rows_V_full_n = outMat_rows_V_full_n;
    end else begin
        ap_sig_ready_outMat_rows_V_full_n = ap_const_logic_1;
    end
end

/// toGray_Block_proc_U0_ap_continue assign process. ///
always @ (ap_sig_ready_inMat_cols_V_channel_full_n or ap_sig_ready_inMat_rows_V_channel1_full_n or ap_sig_ready_inMat_rows_V_channel_full_n or ap_sig_ready_inMat_cols_V_channel1_full_n or ap_sig_ready_grayMat_rows_V_full_n or ap_sig_ready_grayMat_cols_V_full_n or ap_sig_ready_outMat_rows_V_full_n or ap_sig_ready_outMat_cols_V_full_n)
begin
    if (((ap_sig_ready_inMat_cols_V_channel_full_n == ap_const_logic_1) & (ap_const_logic_1 == ap_sig_ready_inMat_rows_V_channel1_full_n) & (ap_const_logic_1 == ap_sig_ready_inMat_rows_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_inMat_cols_V_channel1_full_n) & (ap_const_logic_1 == ap_sig_ready_grayMat_rows_V_full_n) & (ap_const_logic_1 == ap_sig_ready_grayMat_cols_V_full_n) & (ap_const_logic_1 == ap_sig_ready_outMat_rows_V_full_n) & (ap_const_logic_1 == ap_sig_ready_outMat_cols_V_full_n))) begin
        toGray_Block_proc_U0_ap_continue = ap_const_logic_1;
    end else begin
        toGray_Block_proc_U0_ap_continue = ap_const_logic_0;
    end
end
assign IN_STREAM_TREADY = toGray_AXIvideo2Mat_U0_IN_STREAM_TREADY;
assign OUT_STREAM_TDATA = toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDATA;
assign OUT_STREAM_TDEST = toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDEST;
assign OUT_STREAM_TID = toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TID;
assign OUT_STREAM_TKEEP = toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TKEEP;
assign OUT_STREAM_TLAST = toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TLAST;
assign OUT_STREAM_TSTRB = toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TSTRB;
assign OUT_STREAM_TUSER = toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TUSER;
assign OUT_STREAM_TVALID = toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TVALID;
assign ap_done = ap_sig_hs_done;
assign ap_ready = ap_sig_top_allready;

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end
assign ap_sig_hs_continue = ap_const_logic_1;
assign ap_sig_top_allready = toGray_AXIvideo2Mat_U0_ap_ready;
assign grayMat_cols_V_U_ap_dummy_ce = ap_const_logic_1;
assign grayMat_cols_V_din = toGray_Block_proc_U0_ap_return_5;
assign grayMat_cols_V_read = toGray_Equalize_U0_ap_ready;
assign grayMat_cols_V_write = ap_chn_write_toGray_Block_proc_U0_grayMat_cols_V;
assign grayMat_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign grayMat_data_stream_0_V_din = toGray_CvtColor_U0_p_dst_data_stream_V_din;
assign grayMat_data_stream_0_V_read = toGray_Equalize_U0_p_src_data_stream_V_read;
assign grayMat_data_stream_0_V_write = toGray_CvtColor_U0_p_dst_data_stream_V_write;
assign grayMat_rows_V_U_ap_dummy_ce = ap_const_logic_1;
assign grayMat_rows_V_din = toGray_Block_proc_U0_ap_return_4;
assign grayMat_rows_V_read = toGray_Equalize_U0_ap_ready;
assign grayMat_rows_V_write = ap_chn_write_toGray_Block_proc_U0_grayMat_rows_V;
assign inMat_cols_V_channel1_U_ap_dummy_ce = ap_const_logic_1;
assign inMat_cols_V_channel1_din = toGray_Block_proc_U0_ap_return_3;
assign inMat_cols_V_channel1_read = toGray_CvtColor_U0_ap_ready;
assign inMat_cols_V_channel1_write = ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel1;
assign inMat_cols_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign inMat_cols_V_channel_din = toGray_Block_proc_U0_ap_return_2;
assign inMat_cols_V_channel_read = toGray_AXIvideo2Mat_U0_ap_ready;
assign inMat_cols_V_channel_write = ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel;
assign inMat_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign inMat_data_stream_0_V_din = toGray_AXIvideo2Mat_U0_img_data_stream_0_V_din;
assign inMat_data_stream_0_V_read = toGray_CvtColor_U0_p_src_data_stream_0_V_read;
assign inMat_data_stream_0_V_write = toGray_AXIvideo2Mat_U0_img_data_stream_0_V_write;
assign inMat_data_stream_1_V_U_ap_dummy_ce = ap_const_logic_1;
assign inMat_data_stream_1_V_din = toGray_AXIvideo2Mat_U0_img_data_stream_1_V_din;
assign inMat_data_stream_1_V_read = toGray_CvtColor_U0_p_src_data_stream_1_V_read;
assign inMat_data_stream_1_V_write = toGray_AXIvideo2Mat_U0_img_data_stream_1_V_write;
assign inMat_data_stream_2_V_U_ap_dummy_ce = ap_const_logic_1;
assign inMat_data_stream_2_V_din = toGray_AXIvideo2Mat_U0_img_data_stream_2_V_din;
assign inMat_data_stream_2_V_read = toGray_CvtColor_U0_p_src_data_stream_2_V_read;
assign inMat_data_stream_2_V_write = toGray_AXIvideo2Mat_U0_img_data_stream_2_V_write;
assign inMat_rows_V_channel1_U_ap_dummy_ce = ap_const_logic_1;
assign inMat_rows_V_channel1_din = toGray_Block_proc_U0_ap_return_1;
assign inMat_rows_V_channel1_read = toGray_CvtColor_U0_ap_ready;
assign inMat_rows_V_channel1_write = ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel1;
assign inMat_rows_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign inMat_rows_V_channel_din = toGray_Block_proc_U0_ap_return_0;
assign inMat_rows_V_channel_read = toGray_AXIvideo2Mat_U0_ap_ready;
assign inMat_rows_V_channel_write = ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel;
assign outMat_cols_V_U_ap_dummy_ce = ap_const_logic_1;
assign outMat_cols_V_din = toGray_Block_proc_U0_ap_return_7;
assign outMat_cols_V_read = toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_ready;
assign outMat_cols_V_write = ap_chn_write_toGray_Block_proc_U0_outMat_cols_V;
assign outMat_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign outMat_data_stream_0_V_din = toGray_Equalize_U0_p_dst_data_stream_V_din;
assign outMat_data_stream_0_V_read = toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_read;
assign outMat_data_stream_0_V_write = toGray_Equalize_U0_p_dst_data_stream_V_write;
assign outMat_rows_V_U_ap_dummy_ce = ap_const_logic_1;
assign outMat_rows_V_din = toGray_Block_proc_U0_ap_return_6;
assign outMat_rows_V_read = toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_ready;
assign outMat_rows_V_write = ap_chn_write_toGray_Block_proc_U0_outMat_rows_V;
assign toGray_AXIvideo2Mat_U0_IN_STREAM_TDATA = IN_STREAM_TDATA;
assign toGray_AXIvideo2Mat_U0_IN_STREAM_TDEST = IN_STREAM_TDEST;
assign toGray_AXIvideo2Mat_U0_IN_STREAM_TID = IN_STREAM_TID;
assign toGray_AXIvideo2Mat_U0_IN_STREAM_TKEEP = IN_STREAM_TKEEP;
assign toGray_AXIvideo2Mat_U0_IN_STREAM_TLAST = IN_STREAM_TLAST;
assign toGray_AXIvideo2Mat_U0_IN_STREAM_TSTRB = IN_STREAM_TSTRB;
assign toGray_AXIvideo2Mat_U0_IN_STREAM_TUSER = IN_STREAM_TUSER;
assign toGray_AXIvideo2Mat_U0_IN_STREAM_TVALID = IN_STREAM_TVALID;
assign toGray_AXIvideo2Mat_U0_ap_continue = ap_const_logic_1;
assign toGray_AXIvideo2Mat_U0_ap_start = (ap_start & inMat_rows_V_channel_empty_n & inMat_cols_V_channel_empty_n);
assign toGray_AXIvideo2Mat_U0_img_cols_V_read = inMat_cols_V_channel_dout;
assign toGray_AXIvideo2Mat_U0_img_data_stream_0_V_full_n = inMat_data_stream_0_V_full_n;
assign toGray_AXIvideo2Mat_U0_img_data_stream_1_V_full_n = inMat_data_stream_1_V_full_n;
assign toGray_AXIvideo2Mat_U0_img_data_stream_2_V_full_n = inMat_data_stream_2_V_full_n;
assign toGray_AXIvideo2Mat_U0_img_rows_V_read = inMat_rows_V_channel_dout;
assign toGray_Block_proc_U0_ap_start = ap_start;
assign toGray_Block_proc_U0_cols = cols;
assign toGray_Block_proc_U0_rows = rows;
assign toGray_CvtColor_U0_ap_continue = ap_const_logic_1;
assign toGray_CvtColor_U0_ap_start = (inMat_rows_V_channel1_empty_n & inMat_cols_V_channel1_empty_n);
assign toGray_CvtColor_U0_p_dst_data_stream_V_full_n = grayMat_data_stream_0_V_full_n;
assign toGray_CvtColor_U0_p_src_cols_V_read = inMat_cols_V_channel1_dout;
assign toGray_CvtColor_U0_p_src_data_stream_0_V_dout = inMat_data_stream_0_V_dout;
assign toGray_CvtColor_U0_p_src_data_stream_0_V_empty_n = inMat_data_stream_0_V_empty_n;
assign toGray_CvtColor_U0_p_src_data_stream_1_V_dout = inMat_data_stream_1_V_dout;
assign toGray_CvtColor_U0_p_src_data_stream_1_V_empty_n = inMat_data_stream_1_V_empty_n;
assign toGray_CvtColor_U0_p_src_data_stream_2_V_dout = inMat_data_stream_2_V_dout;
assign toGray_CvtColor_U0_p_src_data_stream_2_V_empty_n = inMat_data_stream_2_V_empty_n;
assign toGray_CvtColor_U0_p_src_rows_V_read = inMat_rows_V_channel1_dout;
assign toGray_Equalize_U0_ap_continue = ap_const_logic_1;
assign toGray_Equalize_U0_ap_start = (grayMat_rows_V_empty_n & grayMat_cols_V_empty_n);
assign toGray_Equalize_U0_p_dst_data_stream_V_full_n = outMat_data_stream_0_V_full_n;
assign toGray_Equalize_U0_p_src_cols_V_read = grayMat_cols_V_dout;
assign toGray_Equalize_U0_p_src_data_stream_V_dout = grayMat_data_stream_0_V_dout;
assign toGray_Equalize_U0_p_src_data_stream_V_empty_n = grayMat_data_stream_0_V_empty_n;
assign toGray_Equalize_U0_p_src_rows_V_read = grayMat_rows_V_dout;
assign toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TREADY = OUT_STREAM_TREADY;
assign toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_continue = ap_sig_hs_continue;
assign toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_start = (outMat_rows_V_empty_n & outMat_cols_V_empty_n);
assign toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_cols_V_read = outMat_cols_V_dout;
assign toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_dout = outMat_data_stream_0_V_dout;
assign toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_empty_n = outMat_data_stream_0_V_empty_n;
assign toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_rows_V_read = outMat_rows_V_dout;


endmodule //toGray

