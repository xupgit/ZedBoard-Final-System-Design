// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module toGray_Equalize (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_src_rows_V_read,
        p_src_cols_V_read,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 29'b1;
parameter    ap_ST_st2_fsm_1 = 29'b10;
parameter    ap_ST_st3_fsm_2 = 29'b100;
parameter    ap_ST_pp0_stg0_fsm_3 = 29'b1000;
parameter    ap_ST_st7_fsm_4 = 29'b10000;
parameter    ap_ST_st8_fsm_5 = 29'b100000;
parameter    ap_ST_st9_fsm_6 = 29'b1000000;
parameter    ap_ST_st10_fsm_7 = 29'b10000000;
parameter    ap_ST_st11_fsm_8 = 29'b100000000;
parameter    ap_ST_st12_fsm_9 = 29'b1000000000;
parameter    ap_ST_st13_fsm_10 = 29'b10000000000;
parameter    ap_ST_st14_fsm_11 = 29'b100000000000;
parameter    ap_ST_st15_fsm_12 = 29'b1000000000000;
parameter    ap_ST_st16_fsm_13 = 29'b10000000000000;
parameter    ap_ST_st17_fsm_14 = 29'b100000000000000;
parameter    ap_ST_st18_fsm_15 = 29'b1000000000000000;
parameter    ap_ST_st19_fsm_16 = 29'b10000000000000000;
parameter    ap_ST_st20_fsm_17 = 29'b100000000000000000;
parameter    ap_ST_st21_fsm_18 = 29'b1000000000000000000;
parameter    ap_ST_st22_fsm_19 = 29'b10000000000000000000;
parameter    ap_ST_st23_fsm_20 = 29'b100000000000000000000;
parameter    ap_ST_st24_fsm_21 = 29'b1000000000000000000000;
parameter    ap_ST_st25_fsm_22 = 29'b10000000000000000000000;
parameter    ap_ST_st26_fsm_23 = 29'b100000000000000000000000;
parameter    ap_ST_st27_fsm_24 = 29'b1000000000000000000000000;
parameter    ap_ST_st28_fsm_25 = 29'b10000000000000000000000000;
parameter    ap_ST_st29_fsm_26 = 29'b100000000000000000000000000;
parameter    ap_ST_pp1_stg0_fsm_27 = 29'b1000000000000000000000000000;
parameter    ap_ST_st47_fsm_28 = 29'b10000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_true = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv21_0 = 21'b000000000000000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_437F0000 = 32'b1000011011111110000000000000000;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv21_1 = 21'b1;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv54_0 = 54'b000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv63_0 = 63'b000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv12_433 = 12'b10000110011;
parameter    ap_const_lv11_433 = 11'b10000110011;
parameter    ap_const_lv12_36 = 12'b110110;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv12_8 = 12'b1000;
parameter    ap_const_lv12_9 = 12'b1001;
parameter    ap_const_lv54_3FFFFFFFFFFFFF = 54'b111111111111111111111111111111111111111111111111111111;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [11:0] p_src_rows_V_read;
input  [11:0] p_src_cols_V_read;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm = 29'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_48;
reg   [7:0] hls_lut_V_address0;
reg    hls_lut_V_ce0;
reg    hls_lut_V_we0;
reg   [7:0] hls_lut_V_d0;
wire   [7:0] hls_lut_V_q0;
reg   [11:0] j_reg_270;
reg   [20:0] p_5_reg_290;
reg   [8:0] i3_reg_302;
reg    ap_sig_bdd_88;
wire   [8:0] i_2_fu_348_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_100;
wire   [23:0] cols_cast7_fu_359_p1;
reg   [23:0] cols_cast7_reg_1249;
wire   [0:0] exitcond4_fu_342_p2;
wire   [23:0] rows_cast6_fu_362_p1;
reg   [23:0] rows_cast6_reg_1254;
wire   [0:0] exitcond5_fu_370_p2;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_118;
wire   [11:0] i_4_fu_375_p2;
reg   [11:0] i_4_reg_1263;
wire   [23:0] tmp_1_fu_381_p2;
reg   [23:0] tmp_1_reg_1268;
wire   [0:0] exitcond6_fu_385_p2;
reg   [0:0] exitcond6_reg_1273;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_3;
reg    ap_sig_bdd_134;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_sig_bdd_141;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond6_reg_1273_pp0_it1;
reg   [0:0] tmp_10_reg_1282;
reg   [0:0] ap_reg_ppstg_tmp_10_reg_1282_pp0_it1;
reg    ap_sig_bdd_153;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
wire   [11:0] j_2_fu_390_p2;
wire   [0:0] tmp_10_fu_402_p2;
reg   [7:0] tmp_37_reg_1286;
reg    ap_sig_cseq_ST_st8_fsm_5;
reg    ap_sig_bdd_186;
wire   [31:0] grp_fu_326_p1;
reg   [31:0] tmp_2_reg_1307;
reg    ap_sig_cseq_ST_st13_fsm_10;
reg    ap_sig_bdd_195;
reg    ap_sig_cseq_ST_st28_fsm_25;
reg    ap_sig_bdd_204;
wire   [31:0] grp_fu_318_p2;
reg   [31:0] scale_reg_1317;
reg    ap_sig_cseq_ST_st29_fsm_26;
reg    ap_sig_bdd_213;
wire   [0:0] exitcond_fu_477_p2;
reg   [0:0] exitcond_reg_1322;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_27;
reg    ap_sig_bdd_224;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
reg    ap_reg_ppiten_pp1_it2 = 1'b0;
reg    ap_reg_ppiten_pp1_it3 = 1'b0;
reg    ap_reg_ppiten_pp1_it4 = 1'b0;
reg    ap_reg_ppiten_pp1_it5 = 1'b0;
reg    ap_reg_ppiten_pp1_it6 = 1'b0;
reg    ap_reg_ppiten_pp1_it7 = 1'b0;
reg    ap_reg_ppiten_pp1_it8 = 1'b0;
reg    ap_reg_ppiten_pp1_it9 = 1'b0;
reg    ap_reg_ppiten_pp1_it10 = 1'b0;
reg    ap_reg_ppiten_pp1_it11 = 1'b0;
reg    ap_reg_ppiten_pp1_it12 = 1'b0;
reg    ap_reg_ppiten_pp1_it13 = 1'b0;
reg    ap_reg_ppiten_pp1_it14 = 1'b0;
reg    ap_reg_ppiten_pp1_it15 = 1'b0;
reg    ap_reg_ppiten_pp1_it16 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_reg_1322_pp1_it1;
reg   [0:0] ap_reg_ppstg_exitcond_reg_1322_pp1_it2;
reg   [0:0] ap_reg_ppstg_exitcond_reg_1322_pp1_it3;
reg   [0:0] ap_reg_ppstg_exitcond_reg_1322_pp1_it4;
reg   [0:0] ap_reg_ppstg_exitcond_reg_1322_pp1_it5;
reg   [0:0] ap_reg_ppstg_exitcond_reg_1322_pp1_it6;
reg   [0:0] ap_reg_ppstg_exitcond_reg_1322_pp1_it7;
reg   [0:0] ap_reg_ppstg_exitcond_reg_1322_pp1_it8;
reg   [0:0] ap_reg_ppstg_exitcond_reg_1322_pp1_it9;
reg   [0:0] ap_reg_ppstg_exitcond_reg_1322_pp1_it10;
reg   [0:0] ap_reg_ppstg_exitcond_reg_1322_pp1_it11;
reg   [0:0] ap_reg_ppstg_exitcond_reg_1322_pp1_it12;
reg   [0:0] ap_reg_ppstg_exitcond_reg_1322_pp1_it13;
reg   [0:0] ap_reg_ppstg_exitcond_reg_1322_pp1_it14;
reg   [0:0] ap_reg_ppstg_exitcond_reg_1322_pp1_it15;
wire   [8:0] i_3_fu_483_p2;
wire   [63:0] tmp_5_fu_489_p1;
reg   [63:0] tmp_5_reg_1331;
reg   [63:0] ap_reg_ppstg_tmp_5_reg_1331_pp1_it1;
reg   [63:0] ap_reg_ppstg_tmp_5_reg_1331_pp1_it2;
reg   [63:0] ap_reg_ppstg_tmp_5_reg_1331_pp1_it3;
reg   [63:0] ap_reg_ppstg_tmp_5_reg_1331_pp1_it4;
reg   [63:0] ap_reg_ppstg_tmp_5_reg_1331_pp1_it5;
reg   [63:0] ap_reg_ppstg_tmp_5_reg_1331_pp1_it6;
reg   [63:0] ap_reg_ppstg_tmp_5_reg_1331_pp1_it7;
reg   [63:0] ap_reg_ppstg_tmp_5_reg_1331_pp1_it8;
reg   [63:0] ap_reg_ppstg_tmp_5_reg_1331_pp1_it9;
reg   [63:0] ap_reg_ppstg_tmp_5_reg_1331_pp1_it10;
reg   [63:0] ap_reg_ppstg_tmp_5_reg_1331_pp1_it11;
reg   [63:0] ap_reg_ppstg_tmp_5_reg_1331_pp1_it12;
reg   [63:0] ap_reg_ppstg_tmp_5_reg_1331_pp1_it13;
reg   [63:0] ap_reg_ppstg_tmp_5_reg_1331_pp1_it14;
reg   [63:0] ap_reg_ppstg_tmp_5_reg_1331_pp1_it15;
wire   [20:0] sum_V_fu_494_p2;
reg   [20:0] sum_V_reg_1341;
wire   [31:0] grp_fu_323_p1;
reg   [31:0] tmp_6_reg_1347;
wire   [31:0] grp_fu_314_p2;
reg   [31:0] v_assign_reg_1352;
wire   [0:0] tmp_i_i_fu_517_p2;
reg   [0:0] tmp_i_i_reg_1358;
wire   [0:0] tmp_i_i_33_fu_523_p2;
reg   [0:0] tmp_i_i_33_reg_1364;
reg   [0:0] isneg_reg_1370;
reg   [0:0] ap_reg_ppstg_isneg_reg_1370_pp1_it13;
wire   [53:0] p_Result_s_fu_571_p1;
reg   [53:0] p_Result_s_reg_1380;
wire   [53:0] man_V_1_fu_575_p2;
reg   [53:0] man_V_1_reg_1385;
wire   [0:0] tmp_4_i_fu_581_p2;
reg   [0:0] tmp_4_i_reg_1390;
wire   [11:0] F2_fu_587_p2;
reg   [11:0] F2_reg_1396;
wire   [10:0] tmp_23_fu_593_p1;
reg   [10:0] tmp_23_reg_1406;
wire   [0:0] tmp_8_i_fu_597_p2;
reg   [0:0] tmp_8_i_reg_1411;
wire   [0:0] icmp_fu_657_p2;
reg   [0:0] icmp_reg_1418;
wire   [7:0] tmp_27_fu_694_p1;
reg   [7:0] tmp_27_reg_1424;
wire   [7:0] p_Val2_8_fu_698_p3;
reg   [7:0] p_Val2_8_reg_1429;
wire   [0:0] qb_fu_728_p3;
reg   [0:0] qb_reg_1434;
reg   [0:0] tmp_29_reg_1439;
wire   [7:0] sel_tmp_i_fu_743_p3;
reg   [7:0] sel_tmp_i_reg_1445;
wire   [0:0] sel_tmp2_i_fu_755_p2;
reg   [0:0] sel_tmp2_i_reg_1450;
wire   [0:0] sel_tmp12_demorgan_i_fu_761_p2;
reg   [0:0] sel_tmp12_demorgan_i_reg_1456;
wire   [0:0] tmp_19_i_fu_784_p2;
reg   [0:0] tmp_19_i_reg_1462;
wire   [0:0] rev_fu_798_p2;
reg   [0:0] rev_reg_1469;
wire   [0:0] tmp3_fu_818_p2;
reg   [0:0] tmp3_reg_1476;
wire   [0:0] rev1_fu_832_p2;
reg   [0:0] rev1_reg_1481;
wire   [0:0] tmp_24_i_fu_838_p2;
reg   [0:0] tmp_24_i_reg_1487;
wire   [0:0] Range2_all_ones_fu_860_p2;
reg   [0:0] Range2_all_ones_reg_1493;
wire   [0:0] tmp_26_i_fu_866_p2;
reg   [0:0] tmp_26_i_reg_1498;
wire   [0:0] Range1_all_zeros_1_fu_878_p2;
reg   [0:0] Range1_all_zeros_1_reg_1503;
wire   [0:0] sel_tmp34_i_fu_896_p2;
reg   [0:0] sel_tmp34_i_reg_1508;
wire   [0:0] tmp_7_fu_917_p2;
reg   [0:0] tmp_7_reg_1514;
reg   [0:0] ap_reg_ppstg_tmp_7_reg_1514_pp1_it14;
wire   [0:0] sel_tmp55_demorgan_i_fu_923_p2;
reg   [0:0] sel_tmp55_demorgan_i_reg_1519;
reg   [0:0] ap_reg_ppstg_sel_tmp55_demorgan_i_reg_1519_pp1_it14;
wire   [7:0] p_Val2_10_fu_989_p3;
reg   [7:0] p_Val2_10_reg_1524;
wire   [0:0] Range1_all_ones_2_i_i_34_fu_1102_p2;
reg   [0:0] Range1_all_ones_2_i_i_34_reg_1530;
wire   [0:0] sel_tmp46_i_fu_1119_p2;
reg   [0:0] sel_tmp46_i_reg_1535;
wire   [0:0] sel_tmp47_i_fu_1124_p2;
reg   [0:0] sel_tmp47_i_reg_1540;
wire   [0:0] p_97_demorgan_i_i_fu_1133_p2;
reg   [0:0] p_97_demorgan_i_i_reg_1545;
wire   [7:0] val_V_fu_1202_p3;
reg   [7:0] val_V_reg_1551;
reg   [7:0] hist_out_V_address0;
reg    hist_out_V_ce0;
reg    hist_out_V_we0;
wire   [20:0] hist_out_V_d0;
wire   [20:0] hist_out_V_q0;
reg   [7:0] hist_out_V_address1;
reg    hist_out_V_ce1;
reg    hist_out_V_we1;
reg   [20:0] hist_out_V_d1;
reg   [8:0] i_reg_247;
reg   [11:0] i2_reg_258;
reg    ap_sig_cseq_ST_st7_fsm_4;
reg    ap_sig_bdd_433;
wire   [20:0] grp_fu_335_p2;
wire   [20:0] ap_reg_phiprechg_data_0_V_7_reg_281pp0_it2;
reg   [20:0] data_0_V_7_phi_fu_284_p4;
wire   [20:0] data_0_V_3_fu_422_p3;
reg   [20:0] p_5_phi_fu_294_p4;
wire   [63:0] tmp_fu_354_p1;
wire   [63:0] tmp_11_fu_408_p1;
wire   [63:0] tmp_14_fu_431_p1;
wire   [63:0] tmp_s_fu_464_p1;
reg   [7:0] tmp_16_fu_136;
reg   [20:0] data_0_V_4_fu_140;
reg   [20:0] data_0_V_5_fu_144;
wire   [20:0] p_2_fu_436_p2;
wire   [20:0] p_s_fu_470_p2;
reg    ap_sig_cseq_ST_st47_fsm_28;
reg    ap_sig_bdd_498;
wire   [31:0] grp_fu_314_p0;
wire   [31:0] grp_fu_314_p1;
wire   [31:0] grp_fu_318_p0;
wire   [31:0] grp_fu_318_p1;
reg    ap_sig_cseq_ST_st14_fsm_11;
reg    ap_sig_bdd_517;
wire   [20:0] grp_fu_323_p0;
wire   [31:0] grp_fu_326_p0;
wire   [31:0] d_assign_fu_329_p0;
wire   [11:0] tmp_1_fu_381_p0;
wire   [11:0] tmp_1_fu_381_p1;
wire   [11:0] tmp_9_fu_396_p2;
wire   [0:0] tmp_13_fu_417_p2;
wire   [31:0] p_Val2_6_fu_500_p1;
wire   [7:0] loc_V_fu_503_p4;
wire   [22:0] loc_V_1_fu_513_p1;
wire   [63:0] d_assign_fu_329_p1;
wire   [63:0] ireg_V_fu_529_p1;
wire   [10:0] exp_tmp_V_fu_545_p4;
wire   [51:0] tmp_22_fu_559_p1;
wire   [52:0] tmp_2_i_fu_563_p3;
wire   [62:0] tmp_20_fu_533_p1;
wire   [11:0] tmp_1_i_fu_555_p1;
wire   [0:0] tmp_6_i_fu_612_p2;
wire   [11:0] tmp_7_i_fu_617_p2;
wire   [11:0] F2_2_fu_622_p3;
wire   [53:0] p_Val2_s_fu_607_p3;
wire   [8:0] tmp_25_fu_647_p4;
wire  signed [31:0] F2_2_cast_i_fu_633_p1;
wire   [53:0] tmp_10_i_fu_663_p1;
wire   [53:0] tmp_11_i_fu_667_p2;
wire   [7:0] tmp_24_fu_637_p1;
wire   [14:0] tmp_16_cast_i_fu_684_p1;
wire  signed [14:0] F2_2_cast3_i_fu_629_p1;
wire   [14:0] tmp_13_i_fu_688_p2;
wire   [0:0] tmp_i_fu_641_p2;
wire   [7:0] tmp_26_fu_673_p1;
wire   [7:0] p_i_fu_677_p3;
wire   [10:0] tmp_16_i_fu_711_p2;
wire   [31:0] tmp_20_cast_i_fu_716_p1;
wire   [0:0] tmp_15_i_fu_706_p2;
wire   [0:0] tmp_28_fu_720_p3;
wire   [0:0] sel_tmp1_i_fu_750_p2;
wire   [11:0] pos1_fu_766_p2;
wire   [11:0] pos2_fu_775_p2;
wire   [0:0] tmp_32_fu_790_p3;
wire  signed [31:0] pos1_cast_i_fu_771_p1;
wire   [53:0] tmp_21_i_fu_804_p1;
wire   [53:0] tmp_22_i_fu_808_p2;
wire   [0:0] lD_fu_814_p1;
wire   [0:0] tmp_34_fu_824_p3;
wire  signed [31:0] pos2_cast_i_fu_780_p1;
wire   [53:0] tmp_25_i_fu_844_p1;
wire   [53:0] Range2_V_1_fu_848_p2;
wire   [53:0] r_V_fu_854_p2;
wire   [0:0] tmp_24_i_not_fu_884_p2;
wire   [0:0] tmp_28_i_fu_872_p2;
wire   [0:0] sel_tmp33_i_fu_890_p2;
wire   [0:0] sel_tmp50_i_demorgan_fu_902_p2;
wire   [0:0] sel_tmp50_i_fu_906_p2;
wire   [0:0] sel_tmp51_i_fu_912_p2;
wire   [0:0] tmp_demorgan_i_fu_603_p2;
wire   [7:0] tmp_17_i_fu_928_p1;
wire   [7:0] p_Val2_9_fu_931_p2;
wire   [0:0] tmp_30_fu_936_p3;
wire   [0:0] sel_tmp3_i_fu_950_p2;
wire   [0:0] sel_tmp7_i_fu_961_p2;
wire   [0:0] sel_tmp8_i_fu_966_p2;
wire   [7:0] sel_tmp4_i_fu_954_p3;
wire   [0:0] sel_tmp12_i_fu_979_p2;
wire   [0:0] sel_tmp13_i_fu_984_p2;
wire   [7:0] sel_tmp9_i_fu_971_p3;
wire   [0:0] tmp_5_not_i_fu_996_p2;
wire   [0:0] not_sel_tmp28_i_fu_1001_p2;
wire   [0:0] tmp_18_i_fu_944_p2;
wire   [0:0] tmp2_fu_1006_p2;
wire   [0:0] or_cond91_i_i_fu_1030_p2;
wire   [0:0] Range2_all_ones_1_i_i_fu_1034_p3;
wire   [0:0] Range1_all_ones_1_fu_1026_p2;
wire   [0:0] Range1_all_zeros_fu_1050_p2;
wire   [0:0] or_cond93_i_i_fu_1040_p2;
wire   [0:0] Range1_all_ones_fu_1044_p2;
wire   [0:0] sel_tmp35_i_fu_1065_p3;
wire   [0:0] p_95_i_i_fu_1061_p2;
wire   [0:0] p_98_i_i_fu_1056_p2;
wire   [0:0] sel_tmp39_i_fu_1079_p3;
wire   [0:0] carry_1_i_i_fu_1012_p2;
wire   [0:0] Range1_all_ones_2_i_i_fu_1071_p3;
wire   [0:0] Range1_all_zeros_2_i_i_fu_1086_p3;
wire   [0:0] newsignbit_fu_1018_p3;
wire   [0:0] sel_tmp41_i_fu_1108_p2;
wire   [0:0] tmp4_fu_1113_p2;
wire   [0:0] tmp5_fu_1128_p2;
wire   [0:0] deleted_zeros_fu_1094_p3;
wire   [0:0] tmp_29_i_fu_1139_p2;
wire   [0:0] underflow_fu_1144_p3;
wire   [0:0] underflow_not_i_fu_1150_p2;
wire   [0:0] p_97_demorgan_i_not_i_fu_1161_p2;
wire   [0:0] brmerge_i_i_not_i_fu_1156_p2;
wire   [0:0] tmp_12_fu_1179_p2;
wire   [0:0] brmerge_i_fu_1166_p2;
wire   [0:0] sel_tmp55_i_fu_1191_p2;
wire   [0:0] sel_tmp56_i_fu_1196_p2;
wire   [7:0] p_Val2_12_0_i_mux_i_fu_1172_p3;
wire   [7:0] sel_tmp52_i_fu_1184_p3;
wire    grp_fu_314_ce;
reg    grp_fu_318_ce;
reg    ap_sig_cseq_ST_st9_fsm_6;
reg    ap_sig_bdd_1039;
reg    ap_sig_cseq_ST_st10_fsm_7;
reg    ap_sig_bdd_1046;
reg    ap_sig_cseq_ST_st11_fsm_8;
reg    ap_sig_bdd_1054;
reg    ap_sig_cseq_ST_st12_fsm_9;
reg    ap_sig_bdd_1062;
wire    grp_fu_323_ce;
wire    grp_fu_326_ce;
reg   [28:0] ap_NS_fsm;
reg    ap_sig_bdd_1298;


toGray_Equalize_hls_lut_V #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
hls_lut_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( hls_lut_V_address0 ),
    .ce0( hls_lut_V_ce0 ),
    .we0( hls_lut_V_we0 ),
    .d0( hls_lut_V_d0 ),
    .q0( hls_lut_V_q0 )
);

toGray_Equalize_hist_out_V #(
    .DataWidth( 21 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
hist_out_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( hist_out_V_address0 ),
    .ce0( hist_out_V_ce0 ),
    .we0( hist_out_V_we0 ),
    .d0( hist_out_V_d0 ),
    .q0( hist_out_V_q0 ),
    .address1( hist_out_V_address1 ),
    .ce1( hist_out_V_ce1 ),
    .we1( hist_out_V_we1 ),
    .d1( hist_out_V_d1 )
);

toGray_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
toGray_fmul_32ns_32ns_32_4_max_dsp_U20(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_314_p0 ),
    .din1( grp_fu_314_p1 ),
    .ce( grp_fu_314_ce ),
    .dout( grp_fu_314_p2 )
);

toGray_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
toGray_fdiv_32ns_32ns_32_16_U21(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_318_p0 ),
    .din1( grp_fu_318_p1 ),
    .ce( grp_fu_318_ce ),
    .dout( grp_fu_318_p2 )
);

toGray_uitofp_21ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 21 ),
    .dout_WIDTH( 32 ))
toGray_uitofp_21ns_32_6_U22(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_323_p0 ),
    .ce( grp_fu_323_ce ),
    .dout( grp_fu_323_p1 )
);

toGray_sitofp_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
toGray_sitofp_32ns_32_6_U23(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_326_p0 ),
    .ce( grp_fu_326_ce ),
    .dout( grp_fu_326_p1 )
);

toGray_fpext_32ns_64_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
toGray_fpext_32ns_64_1_U24(
    .din0( d_assign_fu_329_p0 ),
    .dout( d_assign_fu_329_p1 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_28)) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~((ap_sig_bdd_141 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_153 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_lv1_0 == exitcond6_fu_385_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond5_fu_370_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~((ap_sig_bdd_141 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_153 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == exitcond6_fu_385_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond5_fu_370_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~((ap_sig_bdd_141 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_153 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_lv1_0 == exitcond6_fu_385_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (~((ap_sig_bdd_141 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_153 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond5_fu_370_p2))) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_27) & ~(ap_const_lv1_0 == exitcond_fu_477_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_26) & ~(p_dst_data_stream_V_full_n == ap_const_logic_0))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_27) & (ap_const_lv1_0 == exitcond_fu_477_p2))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_26) & ~(p_dst_data_stream_V_full_n == ap_const_logic_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_27) & ~(ap_const_lv1_0 == exitcond_fu_477_p2)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it10 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it10
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it10 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it10 <= ap_reg_ppiten_pp1_it9;
    end
end

/// ap_reg_ppiten_pp1_it11 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it11
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it11 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it11 <= ap_reg_ppiten_pp1_it10;
    end
end

/// ap_reg_ppiten_pp1_it12 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it12
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it12 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it12 <= ap_reg_ppiten_pp1_it11;
    end
end

/// ap_reg_ppiten_pp1_it13 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it13
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it13 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it13 <= ap_reg_ppiten_pp1_it12;
    end
end

/// ap_reg_ppiten_pp1_it14 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it14
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it14 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it14 <= ap_reg_ppiten_pp1_it13;
    end
end

/// ap_reg_ppiten_pp1_it15 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it15
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it15 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it15 <= ap_reg_ppiten_pp1_it14;
    end
end

/// ap_reg_ppiten_pp1_it16 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it16
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it16 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it16 <= ap_reg_ppiten_pp1_it15;
    end
end

/// ap_reg_ppiten_pp1_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
    end
end

/// ap_reg_ppiten_pp1_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it3 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it3 <= ap_reg_ppiten_pp1_it2;
    end
end

/// ap_reg_ppiten_pp1_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it4 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it4 <= ap_reg_ppiten_pp1_it3;
    end
end

/// ap_reg_ppiten_pp1_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it5 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it5 <= ap_reg_ppiten_pp1_it4;
    end
end

/// ap_reg_ppiten_pp1_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it6 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it6 <= ap_reg_ppiten_pp1_it5;
    end
end

/// ap_reg_ppiten_pp1_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it7 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it7 <= ap_reg_ppiten_pp1_it6;
    end
end

/// ap_reg_ppiten_pp1_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it8
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it8 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it8 <= ap_reg_ppiten_pp1_it7;
    end
end

/// ap_reg_ppiten_pp1_it9 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it9
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it9 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp1_it9 <= ap_reg_ppiten_pp1_it8;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_4)) begin
        i2_reg_258 <= i_4_reg_1263;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond4_fu_342_p2 == ap_const_lv1_0))) begin
        i2_reg_258 <= ap_const_lv12_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_27) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_lv1_0 == exitcond_fu_477_p2))) begin
        i3_reg_302 <= i_3_fu_483_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_26) & ~(p_dst_data_stream_V_full_n == ap_const_logic_0))) begin
        i3_reg_302 <= ap_const_lv9_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_342_p2 == ap_const_lv1_0))) begin
        i_reg_247 <= i_2_fu_348_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_88)) begin
        i_reg_247 <= ap_const_lv9_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_141 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_153 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == exitcond6_fu_385_p2))) begin
        j_reg_270 <= j_2_fu_390_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond5_fu_370_p2))) begin
        j_reg_270 <= ap_const_lv12_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1322_pp1_it1))) begin
        p_5_reg_290 <= sum_V_reg_1341;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_26) & ~(p_dst_data_stream_V_full_n == ap_const_logic_0))) begin
        p_5_reg_290 <= ap_const_lv21_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_1273_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_141 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_153 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        tmp_16_fu_136 <= tmp_37_reg_1286;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond4_fu_342_p2 == ap_const_lv1_0))) begin
        tmp_16_fu_136 <= ap_const_lv8_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1322_pp1_it11)) begin
        F2_reg_1396 <= F2_fu_587_p2;
        isneg_reg_1370 <= ireg_V_fu_529_p1[ap_const_lv32_3F];
        man_V_1_reg_1385 <= man_V_1_fu_575_p2;
        p_Result_s_reg_1380[0] <= p_Result_s_fu_571_p1[0];
p_Result_s_reg_1380[1] <= p_Result_s_fu_571_p1[1];
p_Result_s_reg_1380[2] <= p_Result_s_fu_571_p1[2];
p_Result_s_reg_1380[3] <= p_Result_s_fu_571_p1[3];
p_Result_s_reg_1380[4] <= p_Result_s_fu_571_p1[4];
p_Result_s_reg_1380[5] <= p_Result_s_fu_571_p1[5];
p_Result_s_reg_1380[6] <= p_Result_s_fu_571_p1[6];
p_Result_s_reg_1380[7] <= p_Result_s_fu_571_p1[7];
p_Result_s_reg_1380[8] <= p_Result_s_fu_571_p1[8];
p_Result_s_reg_1380[9] <= p_Result_s_fu_571_p1[9];
p_Result_s_reg_1380[10] <= p_Result_s_fu_571_p1[10];
p_Result_s_reg_1380[11] <= p_Result_s_fu_571_p1[11];
p_Result_s_reg_1380[12] <= p_Result_s_fu_571_p1[12];
p_Result_s_reg_1380[13] <= p_Result_s_fu_571_p1[13];
p_Result_s_reg_1380[14] <= p_Result_s_fu_571_p1[14];
p_Result_s_reg_1380[15] <= p_Result_s_fu_571_p1[15];
p_Result_s_reg_1380[16] <= p_Result_s_fu_571_p1[16];
p_Result_s_reg_1380[17] <= p_Result_s_fu_571_p1[17];
p_Result_s_reg_1380[18] <= p_Result_s_fu_571_p1[18];
p_Result_s_reg_1380[19] <= p_Result_s_fu_571_p1[19];
p_Result_s_reg_1380[20] <= p_Result_s_fu_571_p1[20];
p_Result_s_reg_1380[21] <= p_Result_s_fu_571_p1[21];
p_Result_s_reg_1380[22] <= p_Result_s_fu_571_p1[22];
p_Result_s_reg_1380[23] <= p_Result_s_fu_571_p1[23];
p_Result_s_reg_1380[24] <= p_Result_s_fu_571_p1[24];
p_Result_s_reg_1380[25] <= p_Result_s_fu_571_p1[25];
p_Result_s_reg_1380[26] <= p_Result_s_fu_571_p1[26];
p_Result_s_reg_1380[27] <= p_Result_s_fu_571_p1[27];
p_Result_s_reg_1380[28] <= p_Result_s_fu_571_p1[28];
p_Result_s_reg_1380[29] <= p_Result_s_fu_571_p1[29];
p_Result_s_reg_1380[30] <= p_Result_s_fu_571_p1[30];
p_Result_s_reg_1380[31] <= p_Result_s_fu_571_p1[31];
p_Result_s_reg_1380[32] <= p_Result_s_fu_571_p1[32];
p_Result_s_reg_1380[33] <= p_Result_s_fu_571_p1[33];
p_Result_s_reg_1380[34] <= p_Result_s_fu_571_p1[34];
p_Result_s_reg_1380[35] <= p_Result_s_fu_571_p1[35];
p_Result_s_reg_1380[36] <= p_Result_s_fu_571_p1[36];
p_Result_s_reg_1380[37] <= p_Result_s_fu_571_p1[37];
p_Result_s_reg_1380[38] <= p_Result_s_fu_571_p1[38];
p_Result_s_reg_1380[39] <= p_Result_s_fu_571_p1[39];
p_Result_s_reg_1380[40] <= p_Result_s_fu_571_p1[40];
p_Result_s_reg_1380[41] <= p_Result_s_fu_571_p1[41];
p_Result_s_reg_1380[42] <= p_Result_s_fu_571_p1[42];
p_Result_s_reg_1380[43] <= p_Result_s_fu_571_p1[43];
p_Result_s_reg_1380[44] <= p_Result_s_fu_571_p1[44];
p_Result_s_reg_1380[45] <= p_Result_s_fu_571_p1[45];
p_Result_s_reg_1380[46] <= p_Result_s_fu_571_p1[46];
p_Result_s_reg_1380[47] <= p_Result_s_fu_571_p1[47];
p_Result_s_reg_1380[48] <= p_Result_s_fu_571_p1[48];
p_Result_s_reg_1380[49] <= p_Result_s_fu_571_p1[49];
p_Result_s_reg_1380[50] <= p_Result_s_fu_571_p1[50];
p_Result_s_reg_1380[51] <= p_Result_s_fu_571_p1[51];
        tmp_23_reg_1406 <= tmp_23_fu_593_p1;
        tmp_4_i_reg_1390 <= tmp_4_i_fu_581_p2;
        tmp_8_i_reg_1411 <= tmp_8_i_fu_597_p2;
        tmp_i_i_33_reg_1364 <= tmp_i_i_33_fu_523_p2;
        tmp_i_i_reg_1358 <= tmp_i_i_fu_517_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1322_pp1_it13)) begin
        Range1_all_ones_2_i_i_34_reg_1530 <= Range1_all_ones_2_i_i_34_fu_1102_p2;
        p_97_demorgan_i_i_reg_1545 <= p_97_demorgan_i_i_fu_1133_p2;
        p_Val2_10_reg_1524 <= p_Val2_10_fu_989_p3;
        sel_tmp46_i_reg_1535 <= sel_tmp46_i_fu_1119_p2;
        sel_tmp47_i_reg_1540 <= sel_tmp47_i_fu_1124_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1322_pp1_it12)) begin
        Range1_all_zeros_1_reg_1503 <= Range1_all_zeros_1_fu_878_p2;
        Range2_all_ones_reg_1493 <= Range2_all_ones_fu_860_p2;
        icmp_reg_1418 <= icmp_fu_657_p2;
        p_Val2_8_reg_1429 <= p_Val2_8_fu_698_p3;
        qb_reg_1434 <= qb_fu_728_p3;
        rev1_reg_1481 <= rev1_fu_832_p2;
        rev_reg_1469 <= rev_fu_798_p2;
        sel_tmp12_demorgan_i_reg_1456 <= sel_tmp12_demorgan_i_fu_761_p2;
        sel_tmp2_i_reg_1450 <= sel_tmp2_i_fu_755_p2;
        sel_tmp34_i_reg_1508 <= sel_tmp34_i_fu_896_p2;
        sel_tmp55_demorgan_i_reg_1519 <= sel_tmp55_demorgan_i_fu_923_p2;
        sel_tmp_i_reg_1445 <= sel_tmp_i_fu_743_p3;
        tmp3_reg_1476 <= tmp3_fu_818_p2;
        tmp_19_i_reg_1462 <= tmp_19_i_fu_784_p2;
        tmp_24_i_reg_1487 <= tmp_24_i_fu_838_p2;
        tmp_26_i_reg_1498 <= tmp_26_i_fu_866_p2;
        tmp_27_reg_1424 <= tmp_27_fu_694_p1;
        tmp_29_reg_1439 <= p_Val2_8_fu_698_p3[ap_const_lv32_7];
        tmp_7_reg_1514 <= tmp_7_fu_917_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~((ap_sig_bdd_141 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_153 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        ap_reg_ppstg_exitcond6_reg_1273_pp0_it1 <= exitcond6_reg_1273;
        ap_reg_ppstg_tmp_10_reg_1282_pp0_it1 <= tmp_10_reg_1282;
        exitcond6_reg_1273 <= exitcond6_fu_385_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_27)) begin
        ap_reg_ppstg_exitcond_reg_1322_pp1_it1 <= exitcond_reg_1322;
        ap_reg_ppstg_tmp_5_reg_1331_pp1_it1[0] <= tmp_5_reg_1331[0];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it1[1] <= tmp_5_reg_1331[1];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it1[2] <= tmp_5_reg_1331[2];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it1[3] <= tmp_5_reg_1331[3];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it1[4] <= tmp_5_reg_1331[4];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it1[5] <= tmp_5_reg_1331[5];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it1[6] <= tmp_5_reg_1331[6];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it1[7] <= tmp_5_reg_1331[7];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it1[8] <= tmp_5_reg_1331[8];
        exitcond_reg_1322 <= exitcond_fu_477_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_true == ap_true)) begin
        ap_reg_ppstg_exitcond_reg_1322_pp1_it10 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it9;
        ap_reg_ppstg_exitcond_reg_1322_pp1_it11 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it10;
        ap_reg_ppstg_exitcond_reg_1322_pp1_it12 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it11;
        ap_reg_ppstg_exitcond_reg_1322_pp1_it13 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it12;
        ap_reg_ppstg_exitcond_reg_1322_pp1_it14 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it13;
        ap_reg_ppstg_exitcond_reg_1322_pp1_it15 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it14;
        ap_reg_ppstg_exitcond_reg_1322_pp1_it2 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it1;
        ap_reg_ppstg_exitcond_reg_1322_pp1_it3 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it2;
        ap_reg_ppstg_exitcond_reg_1322_pp1_it4 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it3;
        ap_reg_ppstg_exitcond_reg_1322_pp1_it5 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it4;
        ap_reg_ppstg_exitcond_reg_1322_pp1_it6 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it5;
        ap_reg_ppstg_exitcond_reg_1322_pp1_it7 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it6;
        ap_reg_ppstg_exitcond_reg_1322_pp1_it8 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it7;
        ap_reg_ppstg_exitcond_reg_1322_pp1_it9 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it8;
        ap_reg_ppstg_isneg_reg_1370_pp1_it13 <= isneg_reg_1370;
        ap_reg_ppstg_sel_tmp55_demorgan_i_reg_1519_pp1_it14 <= sel_tmp55_demorgan_i_reg_1519;
        ap_reg_ppstg_tmp_5_reg_1331_pp1_it10[0] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it9[0];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it10[1] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it9[1];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it10[2] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it9[2];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it10[3] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it9[3];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it10[4] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it9[4];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it10[5] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it9[5];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it10[6] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it9[6];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it10[7] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it9[7];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it10[8] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it9[8];
        ap_reg_ppstg_tmp_5_reg_1331_pp1_it11[0] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it10[0];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it11[1] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it10[1];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it11[2] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it10[2];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it11[3] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it10[3];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it11[4] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it10[4];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it11[5] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it10[5];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it11[6] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it10[6];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it11[7] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it10[7];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it11[8] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it10[8];
        ap_reg_ppstg_tmp_5_reg_1331_pp1_it12[0] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it11[0];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it12[1] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it11[1];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it12[2] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it11[2];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it12[3] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it11[3];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it12[4] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it11[4];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it12[5] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it11[5];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it12[6] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it11[6];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it12[7] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it11[7];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it12[8] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it11[8];
        ap_reg_ppstg_tmp_5_reg_1331_pp1_it13[0] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it12[0];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it13[1] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it12[1];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it13[2] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it12[2];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it13[3] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it12[3];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it13[4] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it12[4];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it13[5] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it12[5];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it13[6] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it12[6];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it13[7] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it12[7];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it13[8] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it12[8];
        ap_reg_ppstg_tmp_5_reg_1331_pp1_it14[0] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it13[0];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it14[1] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it13[1];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it14[2] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it13[2];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it14[3] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it13[3];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it14[4] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it13[4];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it14[5] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it13[5];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it14[6] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it13[6];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it14[7] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it13[7];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it14[8] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it13[8];
        ap_reg_ppstg_tmp_5_reg_1331_pp1_it15[0] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it14[0];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it15[1] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it14[1];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it15[2] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it14[2];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it15[3] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it14[3];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it15[4] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it14[4];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it15[5] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it14[5];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it15[6] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it14[6];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it15[7] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it14[7];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it15[8] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it14[8];
        ap_reg_ppstg_tmp_5_reg_1331_pp1_it2[0] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it1[0];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it2[1] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it1[1];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it2[2] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it1[2];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it2[3] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it1[3];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it2[4] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it1[4];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it2[5] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it1[5];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it2[6] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it1[6];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it2[7] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it1[7];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it2[8] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it1[8];
        ap_reg_ppstg_tmp_5_reg_1331_pp1_it3[0] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it2[0];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it3[1] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it2[1];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it3[2] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it2[2];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it3[3] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it2[3];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it3[4] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it2[4];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it3[5] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it2[5];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it3[6] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it2[6];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it3[7] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it2[7];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it3[8] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it2[8];
        ap_reg_ppstg_tmp_5_reg_1331_pp1_it4[0] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it3[0];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it4[1] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it3[1];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it4[2] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it3[2];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it4[3] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it3[3];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it4[4] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it3[4];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it4[5] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it3[5];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it4[6] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it3[6];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it4[7] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it3[7];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it4[8] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it3[8];
        ap_reg_ppstg_tmp_5_reg_1331_pp1_it5[0] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it4[0];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it5[1] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it4[1];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it5[2] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it4[2];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it5[3] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it4[3];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it5[4] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it4[4];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it5[5] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it4[5];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it5[6] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it4[6];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it5[7] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it4[7];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it5[8] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it4[8];
        ap_reg_ppstg_tmp_5_reg_1331_pp1_it6[0] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it5[0];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it6[1] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it5[1];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it6[2] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it5[2];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it6[3] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it5[3];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it6[4] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it5[4];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it6[5] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it5[5];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it6[6] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it5[6];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it6[7] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it5[7];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it6[8] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it5[8];
        ap_reg_ppstg_tmp_5_reg_1331_pp1_it7[0] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it6[0];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it7[1] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it6[1];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it7[2] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it6[2];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it7[3] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it6[3];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it7[4] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it6[4];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it7[5] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it6[5];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it7[6] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it6[6];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it7[7] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it6[7];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it7[8] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it6[8];
        ap_reg_ppstg_tmp_5_reg_1331_pp1_it8[0] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it7[0];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it8[1] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it7[1];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it8[2] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it7[2];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it8[3] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it7[3];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it8[4] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it7[4];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it8[5] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it7[5];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it8[6] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it7[6];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it8[7] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it7[7];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it8[8] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it7[8];
        ap_reg_ppstg_tmp_5_reg_1331_pp1_it9[0] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it8[0];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it9[1] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it8[1];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it9[2] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it8[2];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it9[3] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it8[3];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it9[4] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it8[4];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it9[5] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it8[5];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it9[6] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it8[6];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it9[7] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it8[7];
ap_reg_ppstg_tmp_5_reg_1331_pp1_it9[8] <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it8[8];
        ap_reg_ppstg_tmp_7_reg_1514_pp1_it14 <= tmp_7_reg_1514;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond4_fu_342_p2 == ap_const_lv1_0))) begin
        cols_cast7_reg_1249[0] <= cols_cast7_fu_359_p1[0];
cols_cast7_reg_1249[1] <= cols_cast7_fu_359_p1[1];
cols_cast7_reg_1249[2] <= cols_cast7_fu_359_p1[2];
cols_cast7_reg_1249[3] <= cols_cast7_fu_359_p1[3];
cols_cast7_reg_1249[4] <= cols_cast7_fu_359_p1[4];
cols_cast7_reg_1249[5] <= cols_cast7_fu_359_p1[5];
cols_cast7_reg_1249[6] <= cols_cast7_fu_359_p1[6];
cols_cast7_reg_1249[7] <= cols_cast7_fu_359_p1[7];
cols_cast7_reg_1249[8] <= cols_cast7_fu_359_p1[8];
cols_cast7_reg_1249[9] <= cols_cast7_fu_359_p1[9];
cols_cast7_reg_1249[10] <= cols_cast7_fu_359_p1[10];
cols_cast7_reg_1249[11] <= cols_cast7_fu_359_p1[11];
        rows_cast6_reg_1254[0] <= rows_cast6_fu_362_p1[0];
rows_cast6_reg_1254[1] <= rows_cast6_fu_362_p1[1];
rows_cast6_reg_1254[2] <= rows_cast6_fu_362_p1[2];
rows_cast6_reg_1254[3] <= rows_cast6_fu_362_p1[3];
rows_cast6_reg_1254[4] <= rows_cast6_fu_362_p1[4];
rows_cast6_reg_1254[5] <= rows_cast6_fu_362_p1[5];
rows_cast6_reg_1254[6] <= rows_cast6_fu_362_p1[6];
rows_cast6_reg_1254[7] <= rows_cast6_fu_362_p1[7];
rows_cast6_reg_1254[8] <= rows_cast6_fu_362_p1[8];
rows_cast6_reg_1254[9] <= rows_cast6_fu_362_p1[9];
rows_cast6_reg_1254[10] <= rows_cast6_fu_362_p1[10];
rows_cast6_reg_1254[11] <= rows_cast6_fu_362_p1[11];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_1273_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_141 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_153 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        data_0_V_4_fu_140 <= data_0_V_7_phi_fu_284_p4;
        data_0_V_5_fu_144 <= data_0_V_7_phi_fu_284_p4;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        i_4_reg_1263 <= i_4_fu_375_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_26) & ~(p_dst_data_stream_V_full_n == ap_const_logic_0))) begin
        scale_reg_1317 <= grp_fu_318_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_27) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_lv1_0 == exitcond_reg_1322))) begin
        sum_V_reg_1341 <= sum_V_fu_494_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~((ap_sig_bdd_141 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_153 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == exitcond6_fu_385_p2))) begin
        tmp_10_reg_1282 <= tmp_10_fu_402_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond5_fu_370_p2))) begin
        tmp_1_reg_1268 <= tmp_1_fu_381_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_10)) begin
        tmp_2_reg_1307 <= grp_fu_326_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_lv1_0 == exitcond6_reg_1273) & ~((ap_sig_bdd_141 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_153 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        tmp_37_reg_1286 <= p_src_data_stream_V_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_27) & (ap_const_lv1_0 == exitcond_fu_477_p2))) begin
        tmp_5_reg_1331[0] <= tmp_5_fu_489_p1[0];
tmp_5_reg_1331[1] <= tmp_5_fu_489_p1[1];
tmp_5_reg_1331[2] <= tmp_5_fu_489_p1[2];
tmp_5_reg_1331[3] <= tmp_5_fu_489_p1[3];
tmp_5_reg_1331[4] <= tmp_5_fu_489_p1[4];
tmp_5_reg_1331[5] <= tmp_5_fu_489_p1[5];
tmp_5_reg_1331[6] <= tmp_5_fu_489_p1[6];
tmp_5_reg_1331[7] <= tmp_5_fu_489_p1[7];
tmp_5_reg_1331[8] <= tmp_5_fu_489_p1[8];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1322_pp1_it6)) begin
        tmp_6_reg_1347 <= grp_fu_323_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1322_pp1_it10)) begin
        v_assign_reg_1352 <= grp_fu_314_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1322_pp1_it14)) begin
        val_V_reg_1551 <= val_V_fu_1202_p3;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st47_fsm_28)
begin
    if (((ap_const_logic_1 == ap_done_reg) | (ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_28))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st47_fsm_28)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_28)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_3 assign process. ///
always @ (ap_sig_bdd_134)
begin
    if (ap_sig_bdd_134) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg0_fsm_27 assign process. ///
always @ (ap_sig_bdd_224)
begin
    if (ap_sig_bdd_224) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_27 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_7 assign process. ///
always @ (ap_sig_bdd_1046)
begin
    if (ap_sig_bdd_1046) begin
        ap_sig_cseq_ST_st10_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_8 assign process. ///
always @ (ap_sig_bdd_1054)
begin
    if (ap_sig_bdd_1054) begin
        ap_sig_cseq_ST_st11_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_8 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_9 assign process. ///
always @ (ap_sig_bdd_1062)
begin
    if (ap_sig_bdd_1062) begin
        ap_sig_cseq_ST_st12_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_10 assign process. ///
always @ (ap_sig_bdd_195)
begin
    if (ap_sig_bdd_195) begin
        ap_sig_cseq_ST_st13_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_11 assign process. ///
always @ (ap_sig_bdd_517)
begin
    if (ap_sig_bdd_517) begin
        ap_sig_cseq_ST_st14_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_48)
begin
    if (ap_sig_bdd_48) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st28_fsm_25 assign process. ///
always @ (ap_sig_bdd_204)
begin
    if (ap_sig_bdd_204) begin
        ap_sig_cseq_ST_st28_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_25 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st29_fsm_26 assign process. ///
always @ (ap_sig_bdd_213)
begin
    if (ap_sig_bdd_213) begin
        ap_sig_cseq_ST_st29_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_100)
begin
    if (ap_sig_bdd_100) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_118)
begin
    if (ap_sig_bdd_118) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st47_fsm_28 assign process. ///
always @ (ap_sig_bdd_498)
begin
    if (ap_sig_bdd_498) begin
        ap_sig_cseq_ST_st47_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_28 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_4 assign process. ///
always @ (ap_sig_bdd_433)
begin
    if (ap_sig_bdd_433) begin
        ap_sig_cseq_ST_st7_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_5 assign process. ///
always @ (ap_sig_bdd_186)
begin
    if (ap_sig_bdd_186) begin
        ap_sig_cseq_ST_st8_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_6 assign process. ///
always @ (ap_sig_bdd_1039)
begin
    if (ap_sig_bdd_1039) begin
        ap_sig_cseq_ST_st9_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_6 = ap_const_logic_0;
    end
end

/// data_0_V_7_phi_fu_284_p4 assign process. ///
always @ (ap_reg_ppstg_tmp_10_reg_1282_pp0_it1 or grp_fu_335_p2 or ap_reg_phiprechg_data_0_V_7_reg_281pp0_it2 or data_0_V_3_fu_422_p3 or ap_sig_bdd_1298)
begin
    if (ap_sig_bdd_1298) begin
        if ((ap_const_lv1_0 == ap_reg_ppstg_tmp_10_reg_1282_pp0_it1)) begin
            data_0_V_7_phi_fu_284_p4 = data_0_V_3_fu_422_p3;
        end else if (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_10_reg_1282_pp0_it1)) begin
            data_0_V_7_phi_fu_284_p4 = grp_fu_335_p2;
        end else begin
            data_0_V_7_phi_fu_284_p4 = ap_reg_phiprechg_data_0_V_7_reg_281pp0_it2;
        end
    end else begin
        data_0_V_7_phi_fu_284_p4 = ap_reg_phiprechg_data_0_V_7_reg_281pp0_it2;
    end
end

/// grp_fu_318_ce assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or p_dst_data_stream_V_full_n or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_pp0_stg0_fsm_3 or ap_sig_cseq_ST_st8_fsm_5 or ap_sig_cseq_ST_st13_fsm_10 or ap_sig_cseq_ST_st29_fsm_26 or ap_sig_cseq_ST_pp1_stg0_fsm_27 or ap_sig_cseq_ST_st7_fsm_4 or ap_sig_cseq_ST_st47_fsm_28 or ap_sig_cseq_ST_st9_fsm_6 or ap_sig_cseq_ST_st10_fsm_7 or ap_sig_cseq_ST_st11_fsm_8 or ap_sig_cseq_ST_st12_fsm_9)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) | (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_27) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_28) | ((p_dst_data_stream_V_full_n == ap_const_logic_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_26)) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_9))) begin
        grp_fu_318_ce = ap_const_logic_0;
    end else begin
        grp_fu_318_ce = ap_const_logic_1;
    end
end

/// hist_out_V_address0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_pp0_stg0_fsm_3 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp1_stg0_fsm_27 or ap_reg_ppiten_pp1_it0 or tmp_5_fu_489_p1 or tmp_fu_354_p1 or tmp_11_fu_408_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        hist_out_V_address0 = tmp_fu_354_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_27) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0))) begin
        hist_out_V_address0 = tmp_5_fu_489_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        hist_out_V_address0 = tmp_11_fu_408_p1;
    end else begin
        hist_out_V_address0 = 'bx;
    end
end

/// hist_out_V_address1 assign process. ///
always @ (ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_st28_fsm_25 or tmp_14_fu_431_p1 or tmp_s_fu_464_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_25)) begin
        hist_out_V_address1 = tmp_s_fu_464_p1;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) begin
        hist_out_V_address1 = tmp_14_fu_431_p1;
    end else begin
        hist_out_V_address1 = 'bx;
    end
end

/// hist_out_V_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_pp0_stg0_fsm_3 or ap_sig_bdd_141 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_153 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp1_stg0_fsm_27 or ap_reg_ppiten_pp1_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_27) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_141 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_153 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))))) begin
        hist_out_V_ce0 = ap_const_logic_1;
    end else begin
        hist_out_V_ce0 = ap_const_logic_0;
    end
end

/// hist_out_V_ce1 assign process. ///
always @ (ap_sig_bdd_141 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_153 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_st28_fsm_25)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_25) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_141 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_153 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))))) begin
        hist_out_V_ce1 = ap_const_logic_1;
    end else begin
        hist_out_V_ce1 = ap_const_logic_0;
    end
end

/// hist_out_V_d1 assign process. ///
always @ (ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_st28_fsm_25 or p_2_fu_436_p2 or p_s_fu_470_p2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_25)) begin
        hist_out_V_d1 = p_s_fu_470_p2;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) begin
        hist_out_V_d1 = p_2_fu_436_p2;
    end else begin
        hist_out_V_d1 = 'bx;
    end
end

/// hist_out_V_we0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or exitcond4_fu_342_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_342_p2 == ap_const_lv1_0))) begin
        hist_out_V_we0 = ap_const_logic_1;
    end else begin
        hist_out_V_we0 = ap_const_logic_0;
    end
end

/// hist_out_V_we1 assign process. ///
always @ (ap_sig_bdd_141 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond6_reg_1273_pp0_it1 or ap_reg_ppstg_tmp_10_reg_1282_pp0_it1 or ap_sig_bdd_153 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_st28_fsm_25)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_25) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_1273_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_10_reg_1282_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_141 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_153 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))))) begin
        hist_out_V_we1 = ap_const_logic_1;
    end else begin
        hist_out_V_we1 = ap_const_logic_0;
    end
end

/// hls_lut_V_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_3 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_st28_fsm_25 or ap_reg_ppiten_pp1_it16 or ap_reg_ppstg_tmp_5_reg_1331_pp1_it15 or tmp_11_fu_408_p1 or tmp_s_fu_464_p1 or ap_sig_cseq_ST_st47_fsm_28)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_28)) begin
        hls_lut_V_address0 = ap_const_lv8_0;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp1_it16)) begin
        hls_lut_V_address0 = ap_reg_ppstg_tmp_5_reg_1331_pp1_it15;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_25)) begin
        hls_lut_V_address0 = tmp_s_fu_464_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        hls_lut_V_address0 = tmp_11_fu_408_p1;
    end else begin
        hls_lut_V_address0 = 'bx;
    end
end

/// hls_lut_V_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_3 or ap_sig_bdd_141 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_153 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_st28_fsm_25 or ap_reg_ppiten_pp1_it16 or ap_sig_cseq_ST_st47_fsm_28)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_25) | (ap_const_logic_1 == ap_reg_ppiten_pp1_it16) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_141 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_153 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))) | (ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_28))) begin
        hls_lut_V_ce0 = ap_const_logic_1;
    end else begin
        hls_lut_V_ce0 = ap_const_logic_0;
    end
end

/// hls_lut_V_d0 assign process. ///
always @ (ap_reg_ppiten_pp1_it16 or val_V_reg_1551 or ap_sig_cseq_ST_st47_fsm_28)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_28)) begin
        hls_lut_V_d0 = ap_const_lv8_0;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp1_it16)) begin
        hls_lut_V_d0 = val_V_reg_1551;
    end else begin
        hls_lut_V_d0 = 'bx;
    end
end

/// hls_lut_V_we0 assign process. ///
always @ (ap_reg_ppiten_pp1_it16 or ap_reg_ppstg_exitcond_reg_1322_pp1_it15 or ap_sig_cseq_ST_st47_fsm_28)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp1_it16) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1322_pp1_it15)) | (ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_28))) begin
        hls_lut_V_we0 = ap_const_logic_1;
    end else begin
        hls_lut_V_we0 = ap_const_logic_0;
    end
end

/// p_5_phi_fu_294_p4 assign process. ///
always @ (p_5_reg_290 or ap_reg_ppiten_pp1_it2 or ap_reg_ppstg_exitcond_reg_1322_pp1_it1 or sum_V_reg_1341)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1322_pp1_it1))) begin
        p_5_phi_fu_294_p4 = sum_V_reg_1341;
    end else begin
        p_5_phi_fu_294_p4 = p_5_reg_290;
    end
end

/// p_dst_data_stream_V_write assign process. ///
always @ (p_dst_data_stream_V_full_n or ap_sig_bdd_141 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond6_reg_1273_pp0_it1 or ap_reg_ppstg_tmp_10_reg_1282_pp0_it1 or ap_sig_bdd_153 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_st29_fsm_26)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_26) & ~(p_dst_data_stream_V_full_n == ap_const_logic_0)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_1273_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_10_reg_1282_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_141 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_153 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))))) begin
        p_dst_data_stream_V_write = ap_const_logic_1;
    end else begin
        p_dst_data_stream_V_write = ap_const_logic_0;
    end
end

/// p_src_data_stream_V_read assign process. ///
always @ (exitcond6_reg_1273 or ap_sig_cseq_ST_pp0_stg0_fsm_3 or ap_sig_bdd_141 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_153 or ap_reg_ppiten_pp0_it2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_lv1_0 == exitcond6_reg_1273) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_141 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_153 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        p_src_data_stream_V_read = ap_const_logic_1;
    end else begin
        p_src_data_stream_V_read = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or p_dst_data_stream_V_full_n or ap_sig_bdd_88 or exitcond4_fu_342_p2 or exitcond5_fu_370_p2 or exitcond6_fu_385_p2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_141 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_153 or ap_reg_ppiten_pp0_it2 or exitcond_fu_477_p2 or ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it15 or ap_reg_ppiten_pp1_it16)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_88) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(exitcond4_fu_342_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if ((ap_const_lv1_0 == exitcond5_fu_370_p2)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_5;
            end
        end
        ap_ST_pp0_stg0_fsm_3 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_141 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_153 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_141 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_153 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_lv1_0 == exitcond6_fu_385_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_141 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_153 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_141 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_sig_bdd_153 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_lv1_0 == exitcond6_fu_385_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st7_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            end
        end
        ap_ST_st7_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st8_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_6;
        end
        ap_ST_st9_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_7;
        end
        ap_ST_st10_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_8;
        end
        ap_ST_st11_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_9;
        end
        ap_ST_st12_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_10;
        end
        ap_ST_st13_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_11;
        end
        ap_ST_st14_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_12;
        end
        ap_ST_st15_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_13;
        end
        ap_ST_st16_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_14;
        end
        ap_ST_st17_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_15;
        end
        ap_ST_st18_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_16;
        end
        ap_ST_st19_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_17;
        end
        ap_ST_st20_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_18;
        end
        ap_ST_st21_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_19;
        end
        ap_ST_st22_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_20;
        end
        ap_ST_st23_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_21;
        end
        ap_ST_st24_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_22;
        end
        ap_ST_st25_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_23;
        end
        ap_ST_st26_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_24;
        end
        ap_ST_st27_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_25;
        end
        ap_ST_st28_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_26;
        end
        ap_ST_st29_fsm_26 : 
        begin
            if (~(p_dst_data_stream_V_full_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_27;
            end else begin
                ap_NS_fsm = ap_ST_st29_fsm_26;
            end
        end
        ap_ST_pp1_stg0_fsm_27 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp1_it16) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it15)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_const_lv1_0 == exitcond_fu_477_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_27;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_const_lv1_0 == exitcond_fu_477_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
                ap_NS_fsm = ap_ST_st47_fsm_28;
            end else begin
                ap_NS_fsm = ap_ST_st47_fsm_28;
            end
        end
        ap_ST_st47_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_2_cast3_i_fu_629_p1 = $signed(F2_2_fu_622_p3);
assign F2_2_cast_i_fu_633_p1 = $signed(F2_2_fu_622_p3);
assign F2_2_fu_622_p3 = ((tmp_6_i_fu_612_p2)? F2_reg_1396: tmp_7_i_fu_617_p2);
assign F2_fu_587_p2 = (ap_const_lv12_433 - tmp_1_i_fu_555_p1);
assign Range1_all_ones_1_fu_1026_p2 = (tmp3_reg_1476 & tmp_19_i_reg_1462);
assign Range1_all_ones_2_i_i_34_fu_1102_p2 = (carry_1_i_i_fu_1012_p2 & Range1_all_ones_2_i_i_fu_1071_p3);
assign Range1_all_ones_2_i_i_fu_1071_p3 = ((or_cond93_i_i_fu_1040_p2)? Range1_all_ones_fu_1044_p2: sel_tmp35_i_fu_1065_p3);
assign Range1_all_ones_fu_1044_p2 = (Range2_all_ones_1_i_i_fu_1034_p3 & Range1_all_ones_1_fu_1026_p2);
assign Range1_all_zeros_1_fu_878_p2 = (p_Val2_s_fu_607_p3 == ap_const_lv54_0? 1'b1: 1'b0);
assign Range1_all_zeros_2_i_i_fu_1086_p3 = ((or_cond93_i_i_fu_1040_p2)? p_98_i_i_fu_1056_p2: sel_tmp39_i_fu_1079_p3);
assign Range1_all_zeros_fu_1050_p2 = (Range1_all_ones_1_fu_1026_p2 ^ ap_const_lv1_1);
assign Range2_V_1_fu_848_p2 = p_Val2_s_fu_607_p3 >> tmp_25_i_fu_844_p1;
assign Range2_all_ones_1_i_i_fu_1034_p3 = ((or_cond91_i_i_fu_1030_p2)? Range2_all_ones_reg_1493: rev1_reg_1481);
assign Range2_all_ones_fu_860_p2 = (Range2_V_1_fu_848_p2 == r_V_fu_854_p2? 1'b1: 1'b0);
assign ap_reg_phiprechg_data_0_V_7_reg_281pp0_it2 = 'bx;

/// ap_sig_bdd_100 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_100 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_1039 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1039 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_1046 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1046 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_1054 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1054 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_1062 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1062 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_118 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_118 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_1298 assign process. ///
always @ (ap_reg_ppstg_exitcond6_reg_1273_pp0_it1 or ap_reg_ppiten_pp0_it2)
begin
    ap_sig_bdd_1298 = ((ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_1273_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2));
end

/// ap_sig_bdd_134 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_134 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_141 assign process. ///
always @ (p_src_data_stream_V_empty_n or exitcond6_reg_1273)
begin
    ap_sig_bdd_141 = ((p_src_data_stream_V_empty_n == ap_const_logic_0) & (ap_const_lv1_0 == exitcond6_reg_1273));
end

/// ap_sig_bdd_153 assign process. ///
always @ (p_dst_data_stream_V_full_n or ap_reg_ppstg_exitcond6_reg_1273_pp0_it1 or ap_reg_ppstg_tmp_10_reg_1282_pp0_it1)
begin
    ap_sig_bdd_153 = ((p_dst_data_stream_V_full_n == ap_const_logic_0) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond6_reg_1273_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_10_reg_1282_pp0_it1));
end

/// ap_sig_bdd_186 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_186 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_195 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_195 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_204 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_204 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end

/// ap_sig_bdd_213 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_213 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end

/// ap_sig_bdd_224 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_224 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end

/// ap_sig_bdd_433 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_433 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_48 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_48 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_498 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_498 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end

/// ap_sig_bdd_517 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_517 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_88 assign process. ///
always @ (ap_start or ap_done_reg)
begin
    ap_sig_bdd_88 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end
assign brmerge_i_fu_1166_p2 = (underflow_not_i_fu_1150_p2 | p_97_demorgan_i_not_i_fu_1161_p2);
assign brmerge_i_i_not_i_fu_1156_p2 = (p_97_demorgan_i_i_reg_1545 & underflow_not_i_fu_1150_p2);
assign carry_1_i_i_fu_1012_p2 = (tmp2_fu_1006_p2 & sel_tmp3_i_fu_950_p2);
assign cols_cast7_fu_359_p1 = p_src_cols_V_read;
assign d_assign_fu_329_p0 = v_assign_reg_1352;
assign data_0_V_3_fu_422_p3 = ((tmp_13_fu_417_p2)? grp_fu_335_p2: hist_out_V_q0);
assign deleted_zeros_fu_1094_p3 = ((carry_1_i_i_fu_1012_p2)? Range1_all_ones_2_i_i_fu_1071_p3: Range1_all_zeros_2_i_i_fu_1086_p3);
assign exitcond4_fu_342_p2 = (i_reg_247 == ap_const_lv9_100? 1'b1: 1'b0);
assign exitcond5_fu_370_p2 = (i2_reg_258 == p_src_rows_V_read? 1'b1: 1'b0);
assign exitcond6_fu_385_p2 = (j_reg_270 == p_src_cols_V_read? 1'b1: 1'b0);
assign exitcond_fu_477_p2 = (i3_reg_302 == ap_const_lv9_100? 1'b1: 1'b0);
assign exp_tmp_V_fu_545_p4 = {{ireg_V_fu_529_p1[ap_const_lv32_3E : ap_const_lv32_34]}};
assign grp_fu_314_ce = ap_const_logic_1;
assign grp_fu_314_p0 = tmp_6_reg_1347;
assign grp_fu_314_p1 = scale_reg_1317;
assign grp_fu_318_p0 = ap_const_lv32_437F0000;
assign grp_fu_318_p1 = tmp_2_reg_1307;
assign grp_fu_323_ce = ap_const_logic_1;
assign grp_fu_323_p0 = sum_V_reg_1341;
assign grp_fu_326_ce = ap_const_logic_1;
assign grp_fu_326_p0 = tmp_1_reg_1268;
assign grp_fu_335_p2 = (hist_out_V_q0 + ap_const_lv21_1);
assign hist_out_V_d0 = ap_const_lv21_0;
assign i_2_fu_348_p2 = (i_reg_247 + ap_const_lv9_1);
assign i_3_fu_483_p2 = (i3_reg_302 + ap_const_lv9_1);
assign i_4_fu_375_p2 = (i2_reg_258 + ap_const_lv12_1);
assign icmp_fu_657_p2 = (tmp_25_fu_647_p4 == ap_const_lv9_0? 1'b1: 1'b0);
assign ireg_V_fu_529_p1 = d_assign_fu_329_p1;
assign j_2_fu_390_p2 = (j_reg_270 + ap_const_lv12_1);
assign lD_fu_814_p1 = tmp_22_i_fu_808_p2[0:0];
assign loc_V_1_fu_513_p1 = p_Val2_6_fu_500_p1[22:0];
assign loc_V_fu_503_p4 = {{p_Val2_6_fu_500_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign man_V_1_fu_575_p2 = (ap_const_lv54_0 - p_Result_s_fu_571_p1);
assign newsignbit_fu_1018_p3 = p_Val2_10_fu_989_p3[ap_const_lv32_7];
assign not_sel_tmp28_i_fu_1001_p2 = (sel_tmp12_demorgan_i_reg_1456 | tmp_5_not_i_fu_996_p2);
assign or_cond91_i_i_fu_1030_p2 = (tmp_24_i_reg_1487 & rev1_reg_1481);
assign or_cond93_i_i_fu_1040_p2 = (tmp_24_i_reg_1487 & rev_reg_1469);
assign p_2_fu_436_p2 = (data_0_V_5_fu_144 + ap_const_lv21_1);
assign p_95_i_i_fu_1061_p2 = (Range1_all_zeros_1_reg_1503 | rev_reg_1469);
assign p_97_demorgan_i_i_fu_1133_p2 = (tmp5_fu_1128_p2 | deleted_zeros_fu_1094_p3);
assign p_97_demorgan_i_not_i_fu_1161_p2 = (p_97_demorgan_i_i_reg_1545 ^ ap_const_lv1_1);
assign p_98_i_i_fu_1056_p2 = (tmp_26_i_reg_1498 & Range1_all_zeros_fu_1050_p2);
assign p_Result_s_fu_571_p1 = tmp_2_i_fu_563_p3;
assign p_Val2_10_fu_989_p3 = ((sel_tmp13_i_fu_984_p2)? tmp_27_reg_1424: sel_tmp9_i_fu_971_p3);
assign p_Val2_12_0_i_mux_i_fu_1172_p3 = ((brmerge_i_i_not_i_fu_1156_p2)? p_Val2_10_reg_1524: ap_const_lv8_FF);
assign p_Val2_6_fu_500_p1 = v_assign_reg_1352;
assign p_Val2_8_fu_698_p3 = ((tmp_i_fu_641_p2)? tmp_26_fu_673_p1: p_i_fu_677_p3);
assign p_Val2_9_fu_931_p2 = (p_Val2_8_reg_1429 + tmp_17_i_fu_928_p1);
assign p_Val2_s_fu_607_p3 = ((isneg_reg_1370)? man_V_1_reg_1385: p_Result_s_reg_1380);
assign p_dst_data_stream_V_din = hls_lut_V_q0;
assign p_i_fu_677_p3 = ((isneg_reg_1370)? ap_const_lv8_FF: ap_const_lv8_0);
assign p_s_fu_470_p2 = (data_0_V_4_fu_140 + ap_const_lv21_1);
assign pos1_cast_i_fu_771_p1 = $signed(pos1_fu_766_p2);
assign pos1_fu_766_p2 = (F2_reg_1396 + ap_const_lv12_8);
assign pos2_cast_i_fu_780_p1 = $signed(pos2_fu_775_p2);
assign pos2_fu_775_p2 = (F2_reg_1396 + ap_const_lv12_9);
assign qb_fu_728_p3 = ((tmp_15_i_fu_706_p2)? isneg_reg_1370: tmp_28_fu_720_p3);
assign r_V_fu_854_p2 = ap_const_lv54_3FFFFFFFFFFFFF >> tmp_25_i_fu_844_p1;
assign rev1_fu_832_p2 = (tmp_34_fu_824_p3 ^ ap_const_lv1_1);
assign rev_fu_798_p2 = (tmp_32_fu_790_p3 ^ ap_const_lv1_1);
assign rows_cast6_fu_362_p1 = p_src_rows_V_read;
assign sel_tmp12_demorgan_i_fu_761_p2 = (tmp_8_i_reg_1411 | tmp_6_i_fu_612_p2);
assign sel_tmp12_i_fu_979_p2 = (sel_tmp12_demorgan_i_reg_1456 ^ ap_const_lv1_1);
assign sel_tmp13_i_fu_984_p2 = (icmp_reg_1418 & sel_tmp12_i_fu_979_p2);
assign sel_tmp1_i_fu_750_p2 = (tmp_8_i_reg_1411 ^ ap_const_lv1_1);
assign sel_tmp2_i_fu_755_p2 = (tmp_6_i_fu_612_p2 & sel_tmp1_i_fu_750_p2);
assign sel_tmp33_i_fu_890_p2 = (tmp_32_fu_790_p3 | tmp_24_i_not_fu_884_p2);
assign sel_tmp34_i_fu_896_p2 = (tmp_28_i_fu_872_p2 & sel_tmp33_i_fu_890_p2);
assign sel_tmp35_i_fu_1065_p3 = ((sel_tmp34_i_reg_1508)? Range1_all_ones_1_fu_1026_p2: rev_reg_1469);
assign sel_tmp39_i_fu_1079_p3 = ((sel_tmp34_i_reg_1508)? Range1_all_zeros_fu_1050_p2: p_95_i_i_fu_1061_p2);
assign sel_tmp3_i_fu_950_p2 = (sel_tmp2_i_reg_1450 & tmp_29_reg_1439);
assign sel_tmp41_i_fu_1108_p2 = (tmp_19_i_reg_1462 ^ ap_const_lv1_1);
assign sel_tmp46_i_fu_1119_p2 = (tmp4_fu_1113_p2 & ap_reg_ppstg_isneg_reg_1370_pp1_it13);
assign sel_tmp47_i_fu_1124_p2 = (tmp_19_i_reg_1462 & ap_reg_ppstg_isneg_reg_1370_pp1_it13);
assign sel_tmp4_i_fu_954_p3 = ((sel_tmp3_i_fu_950_p2)? p_Val2_9_fu_931_p2: sel_tmp_i_reg_1445);
assign sel_tmp50_i_demorgan_fu_902_p2 = (tmp_i_i_reg_1358 & tmp_i_i_33_reg_1364);
assign sel_tmp50_i_fu_906_p2 = (sel_tmp50_i_demorgan_fu_902_p2 ^ ap_const_lv1_1);
assign sel_tmp51_i_fu_912_p2 = (tmp_4_i_reg_1390 & sel_tmp50_i_fu_906_p2);
assign sel_tmp52_i_fu_1184_p3 = ((tmp_12_fu_1179_p2)? ap_const_lv8_0: p_Val2_10_reg_1524);
assign sel_tmp55_demorgan_i_fu_923_p2 = (tmp_demorgan_i_fu_603_p2 | tmp_4_i_reg_1390);
assign sel_tmp55_i_fu_1191_p2 = (ap_reg_ppstg_sel_tmp55_demorgan_i_reg_1519_pp1_it14 ^ ap_const_lv1_1);
assign sel_tmp56_i_fu_1196_p2 = (brmerge_i_fu_1166_p2 & sel_tmp55_i_fu_1191_p2);
assign sel_tmp7_i_fu_961_p2 = (tmp_29_reg_1439 ^ ap_const_lv1_1);
assign sel_tmp8_i_fu_966_p2 = (sel_tmp2_i_reg_1450 & sel_tmp7_i_fu_961_p2);
assign sel_tmp9_i_fu_971_p3 = ((sel_tmp8_i_fu_966_p2)? p_Val2_9_fu_931_p2: sel_tmp4_i_fu_954_p3);
assign sel_tmp_i_fu_743_p3 = ((tmp_8_i_reg_1411)? tmp_24_fu_637_p1: ap_const_lv8_0);
assign sum_V_fu_494_p2 = (hist_out_V_q0 + p_5_phi_fu_294_p4);
assign tmp2_fu_1006_p2 = (not_sel_tmp28_i_fu_1001_p2 & tmp_18_i_fu_944_p2);
assign tmp3_fu_818_p2 = (lD_fu_814_p1 & rev_fu_798_p2);
assign tmp4_fu_1113_p2 = (newsignbit_fu_1018_p3 & sel_tmp41_i_fu_1108_p2);
assign tmp5_fu_1128_p2 = (ap_reg_ppstg_isneg_reg_1370_pp1_it13 | sel_tmp41_i_fu_1108_p2);
assign tmp_10_fu_402_p2 = (tmp_9_fu_396_p2 == ap_const_lv12_0? 1'b1: 1'b0);
assign tmp_10_i_fu_663_p1 = $unsigned(F2_2_cast_i_fu_633_p1);
assign tmp_11_fu_408_p1 = p_src_data_stream_V_dout;
assign tmp_11_i_fu_667_p2 = $signed(p_Val2_s_fu_607_p3) >>> tmp_10_i_fu_663_p1;
assign tmp_12_fu_1179_p2 = (ap_reg_ppstg_tmp_7_reg_1514_pp1_it14 | underflow_fu_1144_p3);
assign tmp_13_fu_417_p2 = (tmp_37_reg_1286 == tmp_16_fu_136? 1'b1: 1'b0);
assign tmp_13_i_fu_688_p2 = tmp_16_cast_i_fu_684_p1 << F2_2_cast3_i_fu_629_p1;
assign tmp_14_fu_431_p1 = tmp_16_fu_136;
assign tmp_15_i_fu_706_p2 = ($signed(F2_reg_1396) > $signed(12'b110110)? 1'b1: 1'b0);
assign tmp_16_cast_i_fu_684_p1 = tmp_24_fu_637_p1;
assign tmp_16_i_fu_711_p2 = ($signed(tmp_23_reg_1406) + $signed(ap_const_lv11_7FF));
assign tmp_17_i_fu_928_p1 = qb_reg_1434;
assign tmp_18_i_fu_944_p2 = (tmp_30_fu_936_p3 ^ ap_const_lv1_1);
assign tmp_19_i_fu_784_p2 = ($signed(pos1_fu_766_p2) < $signed(12'b110110)? 1'b1: 1'b0);
assign tmp_1_fu_381_p0 = rows_cast6_reg_1254;
assign tmp_1_fu_381_p1 = cols_cast7_reg_1249;
assign tmp_1_fu_381_p2 = (tmp_1_fu_381_p0 * tmp_1_fu_381_p1);
assign tmp_1_i_fu_555_p1 = exp_tmp_V_fu_545_p4;
assign tmp_20_cast_i_fu_716_p1 = tmp_16_i_fu_711_p2;
assign tmp_20_fu_533_p1 = ireg_V_fu_529_p1[62:0];
assign tmp_21_i_fu_804_p1 = $unsigned(pos1_cast_i_fu_771_p1);
assign tmp_22_fu_559_p1 = ireg_V_fu_529_p1[51:0];
assign tmp_22_i_fu_808_p2 = $signed(p_Val2_s_fu_607_p3) >>> tmp_21_i_fu_804_p1;
assign tmp_23_fu_593_p1 = F2_fu_587_p2[10:0];
assign tmp_24_fu_637_p1 = p_Val2_s_fu_607_p3[7:0];
assign tmp_24_i_fu_838_p2 = ($signed(pos2_fu_775_p2) < $signed(12'b110110)? 1'b1: 1'b0);
assign tmp_24_i_not_fu_884_p2 = (tmp_24_i_fu_838_p2 ^ ap_const_lv1_1);
assign tmp_25_fu_647_p4 = {{F2_2_fu_622_p3[ap_const_lv32_B : ap_const_lv32_3]}};
assign tmp_25_i_fu_844_p1 = $unsigned(pos2_cast_i_fu_780_p1);
assign tmp_26_fu_673_p1 = tmp_11_i_fu_667_p2[7:0];
assign tmp_26_i_fu_866_p2 = (Range2_V_1_fu_848_p2 == ap_const_lv54_0? 1'b1: 1'b0);
assign tmp_27_fu_694_p1 = tmp_13_i_fu_688_p2[7:0];
assign tmp_28_fu_720_p3 = p_Val2_s_fu_607_p3[tmp_20_cast_i_fu_716_p1];
assign tmp_28_i_fu_872_p2 = (pos2_fu_775_p2 == ap_const_lv12_36? 1'b1: 1'b0);
assign tmp_29_i_fu_1139_p2 = (Range1_all_ones_2_i_i_34_reg_1530 ^ ap_const_lv1_1);
assign tmp_2_i_fu_563_p3 = {{ap_const_lv1_1}, {tmp_22_fu_559_p1}};
assign tmp_30_fu_936_p3 = p_Val2_9_fu_931_p2[ap_const_lv32_7];
assign tmp_32_fu_790_p3 = pos1_fu_766_p2[ap_const_lv32_B];
assign tmp_34_fu_824_p3 = pos2_fu_775_p2[ap_const_lv32_B];
assign tmp_4_i_fu_581_p2 = (tmp_20_fu_533_p1 == ap_const_lv63_0? 1'b1: 1'b0);
assign tmp_5_fu_489_p1 = i3_reg_302;
assign tmp_5_not_i_fu_996_p2 = (icmp_reg_1418 ^ ap_const_lv1_1);
assign tmp_6_i_fu_612_p2 = ($signed(F2_reg_1396) > $signed(12'b000000000000)? 1'b1: 1'b0);
assign tmp_7_fu_917_p2 = (sel_tmp51_i_fu_912_p2 | tmp_demorgan_i_fu_603_p2);
assign tmp_7_i_fu_617_p2 = (ap_const_lv12_0 - F2_reg_1396);
assign tmp_8_i_fu_597_p2 = (exp_tmp_V_fu_545_p4 == ap_const_lv11_433? 1'b1: 1'b0);
assign tmp_9_fu_396_p2 = (j_reg_270 | i2_reg_258);
assign tmp_demorgan_i_fu_603_p2 = (tmp_i_i_reg_1358 & tmp_i_i_33_reg_1364);
assign tmp_fu_354_p1 = i_reg_247;
assign tmp_i_fu_641_p2 = (F2_2_fu_622_p3 < ap_const_lv12_36? 1'b1: 1'b0);
assign tmp_i_i_33_fu_523_p2 = (loc_V_1_fu_513_p1 != ap_const_lv23_0? 1'b1: 1'b0);
assign tmp_i_i_fu_517_p2 = (loc_V_fu_503_p4 == ap_const_lv8_FF? 1'b1: 1'b0);
assign tmp_s_fu_464_p1 = tmp_16_fu_136;
assign underflow_fu_1144_p3 = ((sel_tmp47_i_reg_1540)? tmp_29_i_fu_1139_p2: sel_tmp46_i_reg_1535);
assign underflow_not_i_fu_1150_p2 = (underflow_fu_1144_p3 ^ ap_const_lv1_1);
assign val_V_fu_1202_p3 = ((sel_tmp56_i_fu_1196_p2)? p_Val2_12_0_i_mux_i_fu_1172_p3: sel_tmp52_i_fu_1184_p3);
always @ (posedge ap_clk)
begin
    cols_cast7_reg_1249[23:12] <= 12'b000000000000;
    rows_cast6_reg_1254[23:12] <= 12'b000000000000;
    tmp_5_reg_1331[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it1[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it2[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it3[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it4[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it5[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it6[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it7[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it8[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it9[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it10[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it11[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it12[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it13[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it14[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it15[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    p_Result_s_reg_1380[53:52] <= 2'b01;
end



endmodule //toGray_Equalize

